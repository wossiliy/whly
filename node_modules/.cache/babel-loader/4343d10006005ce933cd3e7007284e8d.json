{"ast":null,"code":"\"use strict\";\n\nfunction e(e) {\n  return e && \"object\" == typeof e && \"default\" in e ? e : {\n    default: e\n  };\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: !0\n});\n\nvar t = e(require(\"react\")),\n    r = e => \"checkbox\" === e.type,\n    s = e => e instanceof Date,\n    a = e => null == e;\n\nconst n = e => \"object\" == typeof e;\n\nvar i = e => !a(e) && !Array.isArray(e) && n(e) && !s(e),\n    o = e => i(e) && e.target ? r(e.target) ? e.target.checked : e.target.value : e,\n    u = (e, t) => e.has((e => e.substring(0, e.search(/\\.\\d+(\\.|$)/)) || e)(t)),\n    l = e => Array.isArray(e) ? e.filter(Boolean) : [],\n    c = e => void 0 === e,\n    d = (e, t, r) => {\n  if (!t || !i(e)) return r;\n  const s = l(t.split(/[,[\\].]+?/)).reduce((e, t) => a(e) ? e : e[t], e);\n  return c(s) || s === e ? c(e[t]) ? r : e[t] : s;\n};\n\nconst f = \"blur\",\n      m = \"focusout\",\n      y = \"change\",\n      g = \"onBlur\",\n      h = \"onChange\",\n      p = \"onSubmit\",\n      _ = \"onTouched\",\n      v = \"all\",\n      b = \"max\",\n      x = \"min\",\n      A = \"maxLength\",\n      V = \"minLength\",\n      F = \"pattern\",\n      S = \"required\",\n      w = \"validate\",\n      k = t.default.createContext(null),\n      D = () => t.default.useContext(k);\n\nvar C = (e, t, r, s = !0) => {\n  const a = {\n    defaultValues: t._defaultValues\n  };\n\n  for (const n in e) Object.defineProperty(a, n, {\n    get: () => {\n      const a = n;\n      return t._proxyFormState[a] !== v && (t._proxyFormState[a] = !s || v), r && (r[a] = !0), e[a];\n    }\n  });\n\n  return a;\n},\n    E = e => i(e) && !Object.keys(e).length,\n    j = (e, t, r) => {\n  const {\n    name: s,\n    ...a\n  } = e;\n  return E(a) || Object.keys(a).length >= Object.keys(t).length || Object.keys(a).find(e => t[e] === (!r || v));\n},\n    O = e => Array.isArray(e) ? e : [e],\n    U = (e, t, r) => r && t ? e === t : !e || !t || e === t || O(e).some(e => e && (e.startsWith(t) || t.startsWith(e)));\n\nfunction B(e) {\n  const r = t.default.useRef(e);\n  r.current = e, t.default.useEffect(() => {\n    const t = !e.disabled && r.current.subject.subscribe({\n      next: r.current.callback\n    });\n    return () => {\n      t && t.unsubscribe();\n    };\n  }, [e.disabled]);\n}\n\nfunction T(e) {\n  const r = D(),\n        {\n    control: s = r.control,\n    disabled: a,\n    name: n,\n    exact: i\n  } = e || {},\n        [o, u] = t.default.useState(s._formState),\n        l = t.default.useRef(!0),\n        c = t.default.useRef({\n    isDirty: !1,\n    dirtyFields: !1,\n    touchedFields: !1,\n    isValidating: !1,\n    isValid: !1,\n    errors: !1\n  }),\n        d = t.default.useRef(n);\n  return d.current = n, B({\n    disabled: a,\n    callback: t.default.useCallback(e => l.current && U(d.current, e.name, i) && j(e, c.current) && u({ ...s._formState,\n      ...e\n    }), [s, i]),\n    subject: s._subjects.state\n  }), t.default.useEffect(() => (l.current = !0, () => {\n    l.current = !1;\n  }), []), C(o, s, c.current, !1);\n}\n\nvar M = e => \"string\" == typeof e,\n    N = (e, t, r, s) => {\n  const a = Array.isArray(e);\n  return M(e) ? (s && t.watch.add(e), d(r, e)) : a ? e.map(e => (s && t.watch.add(e), d(r, e))) : (s && (t.watchAll = !0), r);\n},\n    L = \"undefined\" != typeof window && void 0 !== window.HTMLElement && \"undefined\" != typeof document;\n\nfunction R(e) {\n  let t;\n  const r = Array.isArray(e);\n  if (e instanceof Date) t = new Date(e);else if (e instanceof Set) t = new Set(e);else {\n    if (L && (e instanceof Blob || e instanceof FileList) || !r && !i(e)) return e;\n    if (t = r ? [] : {}, Array.isArray(e) || (e => {\n      const t = e.constructor && e.constructor.prototype;\n      return i(t) && t.hasOwnProperty(\"isPrototypeOf\");\n    })(e)) for (const r in e) t[r] = R(e[r]);else t = e;\n  }\n  return t;\n}\n\nfunction q(e) {\n  const r = D(),\n        {\n    control: s = r.control,\n    name: a,\n    defaultValue: n,\n    disabled: i,\n    exact: o\n  } = e || {},\n        u = t.default.useRef(a);\n  u.current = a, B({\n    disabled: i,\n    subject: s._subjects.watch,\n    callback: t.default.useCallback(e => {\n      if (U(u.current, e.name, o)) {\n        const t = N(u.current, s._names, e.values || s._formValues);\n        d(c(u.current) || !c(t) ? R(t) : c(t) ? n : t);\n      }\n    }, [s, o, n])\n  });\n  const [l, d] = t.default.useState(c(n) ? s._getWatch(a) : n);\n  return t.default.useEffect(() => s._removeUnmounted()), l;\n}\n\nfunction P(e) {\n  const r = D(),\n        {\n    name: s,\n    control: a = r.control,\n    shouldUnregister: n\n  } = e,\n        i = u(a._names.array, s),\n        l = q({\n    control: a,\n    name: s,\n    defaultValue: d(a._formValues, s, d(a._defaultValues, s, e.defaultValue)),\n    exact: !0\n  }),\n        c = T({\n    control: a,\n    name: s\n  }),\n        m = t.default.useRef(a.register(s, { ...e.rules,\n    value: l\n  }));\n  return t.default.useEffect(() => {\n    const e = (e, t) => {\n      const r = d(a._fields, e);\n      r && (r._f.mount = t);\n    };\n\n    return e(s, !0), () => {\n      const t = a._options.shouldUnregister || n;\n      (i ? t && !a._stateFlags.action : t) ? a.unregister(s) : e(s, !1);\n    };\n  }, [s, a, i, n]), {\n    field: {\n      name: s,\n      value: l,\n      onChange: t.default.useCallback(e => m.current.onChange({\n        target: {\n          value: o(e),\n          name: s\n        },\n        type: y\n      }), [s]),\n      onBlur: t.default.useCallback(() => m.current.onBlur({\n        target: {\n          value: d(a._formValues, s),\n          name: s\n        },\n        type: f\n      }), [s, a]),\n      ref: e => {\n        const t = d(a._fields, s);\n        t && e && (t._f.ref = {\n          focus: () => e.focus(),\n          select: () => e.select(),\n          setCustomValidity: t => e.setCustomValidity(t),\n          reportValidity: () => e.reportValidity()\n        });\n      }\n    },\n    formState: c,\n    fieldState: Object.defineProperties({}, {\n      invalid: {\n        enumerable: !0,\n        get: () => !!d(c.errors, s)\n      },\n      isDirty: {\n        enumerable: !0,\n        get: () => !!d(c.dirtyFields, s)\n      },\n      isTouched: {\n        enumerable: !0,\n        get: () => !!d(c.touchedFields, s)\n      },\n      error: {\n        enumerable: !0,\n        get: () => d(c.errors, s)\n      }\n    })\n  };\n}\n\nvar W = (e, t, r, s, a) => t ? { ...r[e],\n  types: { ...(r[e] && r[e].types ? r[e].types : {}),\n    [s]: a || !0\n  }\n} : {},\n    $ = e => /^\\w*$/.test(e),\n    I = e => l(e.replace(/[\"|']|\\]/g, \"\").split(/\\.|\\[/));\n\nfunction H(e, t, r) {\n  let s = -1;\n  const a = $(t) ? [t] : I(t),\n        n = a.length,\n        o = n - 1;\n\n  for (; ++s < n;) {\n    const t = a[s];\n    let n = r;\n\n    if (s !== o) {\n      const r = e[t];\n      n = i(r) || Array.isArray(r) ? r : isNaN(+a[s + 1]) ? {} : [];\n    }\n\n    e[t] = n, e = e[t];\n  }\n\n  return e;\n}\n\nconst z = (e, t, r) => {\n  for (const s of r || Object.keys(e)) {\n    const r = d(e, s);\n\n    if (r) {\n      const {\n        _f: e,\n        ...s\n      } = r;\n\n      if (e && t(e.name)) {\n        if (e.ref.focus) {\n          e.ref.focus();\n          break;\n        }\n\n        if (e.refs && e.refs[0].focus) {\n          e.refs[0].focus();\n          break;\n        }\n      } else i(s) && z(s, t);\n    }\n  }\n};\n\nvar G = () => {\n  const e = \"undefined\" == typeof performance ? Date.now() : 1e3 * performance.now();\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, t => {\n    const r = (16 * Math.random() + e) % 16 | 0;\n    return (\"x\" == t ? r : 3 & r | 8).toString(16);\n  });\n},\n    J = (e, t, r = {}) => r.shouldFocus || c(r.shouldFocus) ? r.focusName || `${e}.${c(r.focusIndex) ? t : r.focusIndex}.` : \"\",\n    K = (e, t, r) => !r && (t.watchAll || t.watch.has(e) || [...t.watch].some(t => e.startsWith(t) && /^\\.\\w+/.test(e.slice(t.length)))),\n    Q = (e, t, r) => {\n  const s = l(d(e, r));\n  return H(s, \"root\", t[r]), H(e, r, s), e;\n},\n    X = e => \"boolean\" == typeof e,\n    Y = e => \"file\" === e.type,\n    Z = e => \"function\" == typeof e,\n    ee = e => M(e) || t.default.isValidElement(e),\n    te = e => \"radio\" === e.type,\n    re = e => e instanceof RegExp;\n\nconst se = {\n  value: !1,\n  isValid: !1\n},\n      ae = {\n  value: !0,\n  isValid: !0\n};\n\nvar ne = e => {\n  if (Array.isArray(e)) {\n    if (e.length > 1) {\n      const t = e.filter(e => e && e.checked && !e.disabled).map(e => e.value);\n      return {\n        value: t,\n        isValid: !!t.length\n      };\n    }\n\n    return e[0].checked && !e[0].disabled ? e[0].attributes && !c(e[0].attributes.value) ? c(e[0].value) || \"\" === e[0].value ? ae : {\n      value: e[0].value,\n      isValid: !0\n    } : ae : se;\n  }\n\n  return se;\n};\n\nconst ie = {\n  isValid: !1,\n  value: null\n};\n\nvar oe = e => Array.isArray(e) ? e.reduce((e, t) => t && t.checked && !t.disabled ? {\n  isValid: !0,\n  value: t.value\n} : e, ie) : ie;\n\nfunction ue(e, t, r = \"validate\") {\n  if (ee(e) || Array.isArray(e) && e.every(ee) || X(e) && !e) return {\n    type: r,\n    message: ee(e) ? e : \"\",\n    ref: t\n  };\n}\n\nvar le = e => i(e) && !re(e) ? e : {\n  value: e,\n  message: \"\"\n},\n    ce = async (e, t, s, n, o) => {\n  const {\n    ref: u,\n    refs: l,\n    required: c,\n    maxLength: d,\n    minLength: f,\n    min: m,\n    max: y,\n    pattern: g,\n    validate: h,\n    name: p,\n    valueAsNumber: _,\n    mount: v,\n    disabled: k\n  } = e._f;\n  if (!v || k) return {};\n\n  const D = l ? l[0] : u,\n        C = e => {\n    n && D.reportValidity && (D.setCustomValidity(X(e) ? \"\" : e || \"\"), D.reportValidity());\n  },\n        j = {},\n        O = te(u),\n        U = r(u),\n        B = O || U,\n        T = (_ || Y(u)) && !u.value || \"\" === t || Array.isArray(t) && !t.length,\n        N = W.bind(null, p, s, j),\n        L = (e, t, r, s = A, a = V) => {\n    const n = e ? t : r;\n    j[p] = {\n      type: e ? s : a,\n      message: n,\n      ref: u,\n      ...N(e ? s : a, n)\n    };\n  };\n\n  if (o ? !Array.isArray(t) || !t.length : c && (!B && (T || a(t)) || X(t) && !t || U && !ne(l).isValid || O && !oe(l).isValid)) {\n    const {\n      value: e,\n      message: t\n    } = ee(c) ? {\n      value: !!c,\n      message: c\n    } : le(c);\n    if (e && (j[p] = {\n      type: S,\n      message: t,\n      ref: D,\n      ...N(S, t)\n    }, !s)) return C(t), j;\n  }\n\n  if (!(T || a(m) && a(y))) {\n    let e, r;\n    const n = le(y),\n          i = le(m);\n\n    if (a(t) || isNaN(t)) {\n      const s = u.valueAsDate || new Date(t),\n            a = e => new Date(new Date().toDateString() + \" \" + e),\n            o = \"time\" == u.type,\n            l = \"week\" == u.type;\n\n      M(n.value) && t && (e = o ? a(t) > a(n.value) : l ? t > n.value : s > new Date(n.value)), M(i.value) && t && (r = o ? a(t) < a(i.value) : l ? t < i.value : s < new Date(i.value));\n    } else {\n      const s = u.valueAsNumber || (t ? +t : t);\n      a(n.value) || (e = s > n.value), a(i.value) || (r = s < i.value);\n    }\n\n    if ((e || r) && (L(!!e, n.message, i.message, b, x), !s)) return C(j[p].message), j;\n  }\n\n  if ((d || f) && !T && (M(t) || o && Array.isArray(t))) {\n    const e = le(d),\n          r = le(f),\n          n = !a(e.value) && t.length > e.value,\n          i = !a(r.value) && t.length < r.value;\n    if ((n || i) && (L(n, e.message, r.message), !s)) return C(j[p].message), j;\n  }\n\n  if (g && !T && M(t)) {\n    const {\n      value: e,\n      message: r\n    } = le(g);\n    if (re(e) && !t.match(e) && (j[p] = {\n      type: F,\n      message: r,\n      ref: u,\n      ...N(F, r)\n    }, !s)) return C(r), j;\n  }\n\n  if (h) if (Z(h)) {\n    const e = ue(await h(t), D);\n    if (e && (j[p] = { ...e,\n      ...N(w, e.message)\n    }, !s)) return C(e.message), j;\n  } else if (i(h)) {\n    let e = {};\n\n    for (const r in h) {\n      if (!E(e) && !s) break;\n      const a = ue(await h[r](t), D, r);\n      a && (e = { ...a,\n        ...N(r, a.message)\n      }, C(a.message), s && (j[p] = e));\n    }\n\n    if (!E(e) && (j[p] = {\n      ref: D,\n      ...e\n    }, !s)) return j;\n  }\n  return C(!0), j;\n};\n\nfunction de(e, t) {\n  return [...e, ...O(t)];\n}\n\nvar fe = e => Array.isArray(e) ? e.map(() => {}) : void 0,\n    me = e => ({\n  isOnSubmit: !e || e === p,\n  isOnBlur: e === g,\n  isOnChange: e === h,\n  isOnAll: e === v,\n  isOnTouch: e === _\n});\n\nfunction ye(e, t, r) {\n  return [...e.slice(0, t), ...O(r), ...e.slice(t)];\n}\n\nvar ge = (e, t, r) => Array.isArray(e) ? (c(e[r]) && (e[r] = void 0), e.splice(r, 0, e.splice(t, 1)[0]), e) : [];\n\nfunction he(e, t) {\n  return [...O(t), ...O(e)];\n}\n\nvar pe = (e, t) => c(t) ? [] : function (e, t) {\n  let r = 0;\n  const s = [...e];\n\n  for (const e of t) s.splice(e - r, 1), r++;\n\n  return l(s).length ? s : [];\n}(e, O(t).sort((e, t) => e - t)),\n    _e = (e, t, r) => {\n  e[t] = [e[r], e[r] = e[t]][0];\n};\n\nfunction ve(e) {\n  for (const t in e) if (!c(e[t])) return !1;\n\n  return !0;\n}\n\nfunction be(e, t) {\n  const r = $(t) ? [t] : I(t),\n        s = 1 == r.length ? e : function (e, t) {\n    const r = t.slice(0, -1).length;\n    let s = 0;\n\n    for (; s < r;) e = c(e) ? s++ : e[t[s++]];\n\n    return e;\n  }(e, r),\n        a = r[r.length - 1];\n  let n;\n  s && delete s[a];\n\n  for (let t = 0; t < r.slice(0, -1).length; t++) {\n    let s,\n        a = -1;\n    const o = r.slice(0, -(t + 1)),\n          u = o.length - 1;\n\n    for (t > 0 && (n = e); ++a < o.length;) {\n      const t = o[a];\n      s = s ? s[t] : e[t], u === a && (i(s) && E(s) || Array.isArray(s) && ve(s)) && (n ? delete n[t] : delete e[t]), n = s;\n    }\n  }\n\n  return e;\n}\n\nvar xe = (e, t, r) => (e[t] = r, e);\n\nfunction Ae() {\n  let e = [];\n  return {\n    get observers() {\n      return e;\n    },\n\n    next: t => {\n      for (const r of e) r.next(t);\n    },\n    subscribe: t => (e.push(t), {\n      unsubscribe: () => {\n        e = e.filter(e => e !== t);\n      }\n    }),\n    unsubscribe: () => {\n      e = [];\n    }\n  };\n}\n\nvar Ve = e => a(e) || !n(e);\n\nfunction Fe(e, t) {\n  if (Ve(e) || Ve(t)) return e === t;\n  if (s(e) && s(t)) return e.getTime() === t.getTime();\n  const r = Object.keys(e),\n        a = Object.keys(t);\n  if (r.length !== a.length) return !1;\n\n  for (const n of r) {\n    const r = e[n];\n    if (!a.includes(n)) return !1;\n\n    if (\"ref\" !== n) {\n      const e = t[n];\n      if (s(r) && s(e) || i(r) && i(e) || Array.isArray(r) && Array.isArray(e) ? !Fe(r, e) : r !== e) return !1;\n    }\n  }\n\n  return !0;\n}\n\nvar Se = e => {\n  const t = e ? e.ownerDocument : 0;\n  return e instanceof (t && t.defaultView ? t.defaultView.HTMLElement : HTMLElement);\n},\n    we = e => \"select-multiple\" === e.type,\n    ke = e => Se(e) && e.isConnected,\n    De = e => {\n  for (const t in e) if (Z(e[t])) return !0;\n\n  return !1;\n};\n\nfunction Ce(e, t = {}) {\n  const r = Array.isArray(e);\n  if (i(e) || r) for (const r in e) Array.isArray(e[r]) || i(e[r]) && !De(e[r]) ? (t[r] = Array.isArray(e[r]) ? [] : {}, Ce(e[r], t[r])) : a(e[r]) || (t[r] = !0);\n  return t;\n}\n\nfunction Ee(e, t, r) {\n  const s = Array.isArray(e);\n  if (i(e) || s) for (const s in e) Array.isArray(e[s]) || i(e[s]) && !De(e[s]) ? c(t) || Ve(r[s]) ? r[s] = Array.isArray(e[s]) ? Ce(e[s], []) : { ...Ce(e[s])\n  } : Ee(e[s], a(t) ? {} : t[s], r[s]) : Fe(e[s], t[s]) ? delete r[s] : r[s] = !0;\n  return r;\n}\n\nvar je = (e, t) => Ee(e, t, Ce(t)),\n    Oe = (e, {\n  valueAsNumber: t,\n  valueAsDate: r,\n  setValueAs: s\n}) => c(e) ? e : t ? \"\" === e ? NaN : e ? +e : e : r && M(e) ? new Date(e) : s ? s(e) : e;\n\nfunction Ue(e) {\n  const t = e.ref;\n  if (!(e.refs ? e.refs.every(e => e.disabled) : t.disabled)) return Y(t) ? t.files : te(t) ? oe(e.refs).value : we(t) ? [...t.selectedOptions].map(({\n    value: e\n  }) => e) : r(t) ? ne(e.refs).value : Oe(c(t.value) ? e.ref.value : t.value, e);\n}\n\nvar Be = e => c(e) ? void 0 : re(e) ? e.source : i(e) ? re(e.value) ? e.value.source : e.value : e;\n\nfunction Te(e, t, r) {\n  const s = d(e, r);\n  if (s || $(r)) return {\n    error: s,\n    name: r\n  };\n  const a = r.split(\".\");\n\n  for (; a.length;) {\n    const s = a.join(\".\"),\n          n = d(t, s),\n          i = d(e, s);\n    if (n && !Array.isArray(n) && r !== s) return {\n      name: r\n    };\n    if (i && i.type) return {\n      name: s,\n      error: i\n    };\n    a.pop();\n  }\n\n  return {\n    name: r\n  };\n}\n\nconst Me = {\n  mode: p,\n  reValidateMode: h,\n  shouldFocusError: !0\n};\n\nfunction Ne(e = {}) {\n  let t,\n      n = { ...Me,\n    ...e\n  },\n      i = {\n    submitCount: 0,\n    isDirty: !1,\n    isValidating: !1,\n    isSubmitted: !1,\n    isSubmitting: !1,\n    isSubmitSuccessful: !1,\n    isValid: !1,\n    touchedFields: {},\n    dirtyFields: {},\n    errors: {}\n  },\n      y = {},\n      g = R(n.defaultValues) || {},\n      h = n.shouldUnregister ? {} : R(g),\n      p = {\n    action: !1,\n    mount: !1,\n    watch: !1\n  },\n      _ = {\n    mount: new Set(),\n    unMount: new Set(),\n    array: new Set(),\n    watch: new Set()\n  },\n      b = 0,\n      x = {};\n\n  const A = {\n    isDirty: !1,\n    dirtyFields: !1,\n    touchedFields: !1,\n    isValidating: !1,\n    isValid: !1,\n    errors: !1\n  },\n        V = {\n    watch: Ae(),\n    array: Ae(),\n    state: Ae()\n  },\n        F = me(n.mode),\n        S = me(n.reValidateMode),\n        w = n.criteriaMode === v,\n        k = async () => {\n    let e = !1;\n    return A.isValid && (e = n.resolver ? E((await U()).errors) : await B(y, !0), e !== i.isValid && (i.isValid = e, V.state.next({\n      isValid: e\n    }))), e;\n  },\n        D = (e, t, r, s) => {\n    const a = d(y, e);\n\n    if (a) {\n      const n = d(h, e, c(r) ? d(g, e) : r);\n      c(n) || s && s.defaultChecked || t ? H(h, e, t ? n : Ue(a._f)) : P(e, n), p.mount && k();\n    }\n  },\n        C = (e, t, r, s, a) => {\n    let n = !1;\n    const o = {\n      name: e\n    },\n          u = d(i.touchedFields, e);\n\n    if (A.isDirty) {\n      const e = i.isDirty;\n      i.isDirty = o.isDirty = T(), n = e !== o.isDirty;\n    }\n\n    if (A.dirtyFields && (!r || s)) {\n      const r = d(i.dirtyFields, e);\n      Fe(d(g, e), t) ? be(i.dirtyFields, e) : H(i.dirtyFields, e, !0), o.dirtyFields = i.dirtyFields, n = n || r !== d(i.dirtyFields, e);\n    }\n\n    return r && !u && (H(i.touchedFields, e, r), o.touchedFields = i.touchedFields, n = n || A.touchedFields && u !== r), n && a && V.state.next(o), n ? o : {};\n  },\n        j = (r, s, a, n) => {\n    const o = d(i.errors, r),\n          u = A.isValid && X(s) && i.isValid !== s;\n    var l;\n\n    if (e.delayError && a ? (l = () => ((e, t) => {\n      H(i.errors, e, t), V.state.next({\n        errors: i.errors\n      });\n    })(r, a), t = e => {\n      clearTimeout(b), b = window.setTimeout(l, e);\n    }, t(e.delayError)) : (clearTimeout(b), t = null, a ? H(i.errors, r, a) : be(i.errors, r)), (a ? !Fe(o, a) : o) || !E(n) || u) {\n      const e = { ...n,\n        ...(u && X(s) ? {\n          isValid: s\n        } : {}),\n        errors: i.errors,\n        name: r\n      };\n      i = { ...i,\n        ...e\n      }, V.state.next(e);\n    }\n\n    x[r]--, A.isValidating && !Object.values(x).some(e => e) && (V.state.next({\n      isValidating: !1\n    }), x = {});\n  },\n        U = async e => n.resolver ? await n.resolver({ ...h\n  }, n.context, ((e, t, r, s) => {\n    const a = {};\n\n    for (const r of e) {\n      const e = d(t, r);\n      e && H(a, r, e._f);\n    }\n\n    return {\n      criteriaMode: r,\n      names: [...e],\n      fields: a,\n      shouldUseNativeValidation: s\n    };\n  })(e || _.mount, y, n.criteriaMode, n.shouldUseNativeValidation)) : {},\n        B = async (e, t, r = {\n    valid: !0\n  }) => {\n    for (const s in e) {\n      const a = e[s];\n\n      if (a) {\n        const {\n          _f: e,\n          ...s\n        } = a;\n\n        if (e) {\n          const s = _.array.has(e.name),\n                o = await ce(a, d(h, e.name), w, n.shouldUseNativeValidation, s);\n\n          if (o[e.name] && (r.valid = !1, t)) break;\n          !t && (d(o, e.name) ? s ? Q(i.errors, o, e.name) : H(i.errors, e.name, o[e.name]) : be(i.errors, e.name));\n        }\n\n        s && (await B(s, t, r));\n      }\n    }\n\n    return r.valid;\n  },\n        T = (e, t) => (e && t && H(h, e, t), !Fe(J(), g)),\n        q = (e, t, r) => {\n    const s = { ...(p.mount ? h : c(t) ? g : M(e) ? {\n        [e]: t\n      } : t)\n    };\n    return N(e, _, s, r);\n  },\n        P = (e, t, s = {}) => {\n    const n = d(y, e);\n    let i = t;\n\n    if (n) {\n      const s = n._f;\n      s && (!s.disabled && H(h, e, Oe(t, s)), i = L && Se(s.ref) && a(t) ? \"\" : t, we(s.ref) ? [...s.ref.options].forEach(e => e.selected = i.includes(e.value)) : s.refs ? r(s.ref) ? s.refs.length > 1 ? s.refs.forEach(e => (!e.defaultChecked || !e.disabled) && (e.checked = Array.isArray(i) ? !!i.find(t => t === e.value) : i === e.value)) : s.refs[0] && (s.refs[0].checked = !!i) : s.refs.forEach(e => e.checked = e.value === i) : Y(s.ref) ? s.ref.value = \"\" : (s.ref.value = i, s.ref.type || V.watch.next({\n        name: e\n      })));\n    }\n\n    (s.shouldDirty || s.shouldTouch) && C(e, i, s.shouldTouch, s.shouldDirty, !0), s.shouldValidate && G(e);\n  },\n        W = (e, t, r) => {\n    for (const a in t) {\n      const n = t[a],\n            i = `${e}.${a}`,\n            o = d(y, i);\n      !_.array.has(e) && Ve(n) && (!o || o._f) || s(n) ? P(i, n, r) : W(i, n, r);\n    }\n  },\n        $ = (e, t, r = {}) => {\n    const s = d(y, e),\n          n = _.array.has(e),\n          o = R(t);\n\n    H(h, e, o), n ? (V.array.next({\n      name: e,\n      values: h\n    }), (A.isDirty || A.dirtyFields) && r.shouldDirty && (i.dirtyFields = je(g, h), V.state.next({\n      name: e,\n      dirtyFields: i.dirtyFields,\n      isDirty: T(e, o)\n    }))) : !s || s._f || a(o) ? P(e, o, r) : W(e, o, r), K(e, _) && V.state.next({}), V.watch.next({\n      name: e\n    });\n  },\n        I = async e => {\n    const r = e.target;\n    let s = r.name;\n    const a = d(y, s);\n\n    if (a) {\n      let l, c;\n\n      const g = r.type ? Ue(a._f) : o(e),\n            p = e.type === f || e.type === m,\n            v = !((u = a._f).mount && (u.required || u.min || u.max || u.maxLength || u.minLength || u.pattern || u.validate) || n.resolver || d(i.errors, s) || a._f.deps) || ((e, t, r, s, a) => !a.isOnAll && (!r && a.isOnTouch ? !(t || e) : (r ? s.isOnBlur : a.isOnBlur) ? !e : !(r ? s.isOnChange : a.isOnChange) || e))(p, d(i.touchedFields, s), i.isSubmitted, S, F),\n            b = K(s, _, p);\n\n      H(h, s, g), p ? (a._f.onBlur && a._f.onBlur(e), t && t(0)) : a._f.onChange && a._f.onChange(e);\n      const D = C(s, g, p, !1),\n            O = !E(D) || b;\n      if (!p && V.watch.next({\n        name: s,\n        type: e.type\n      }), v) return A.isValid && k(), O && V.state.next({\n        name: s,\n        ...(b ? {} : D)\n      });\n\n      if (!p && b && V.state.next({}), x[s] = x[s] ? x[s] + 1 : 1, V.state.next({\n        isValidating: !0\n      }), n.resolver) {\n        const {\n          errors: e\n        } = await U([s]),\n              t = Te(i.errors, y, s),\n              r = Te(e, y, t.name || s);\n        l = r.error, s = r.name, c = E(e);\n      } else l = (await ce(a, d(h, s), w, n.shouldUseNativeValidation))[s], k();\n\n      a._f.deps && G(a._f.deps), j(s, c, l, D);\n    }\n\n    var u;\n  },\n        G = async (e, t = {}) => {\n    let r, s;\n    const a = O(e);\n\n    if (V.state.next({\n      isValidating: !0\n    }), n.resolver) {\n      const t = await (async e => {\n        const {\n          errors: t\n        } = await U();\n        if (e) for (const r of e) {\n          const e = d(t, r);\n          e ? H(i.errors, r, e) : be(i.errors, r);\n        } else i.errors = t;\n        return t;\n      })(c(e) ? e : a);\n      r = E(t), s = e ? !a.some(e => d(t, e)) : r;\n    } else e ? (s = (await Promise.all(a.map(async e => {\n      const t = d(y, e);\n      return await B(t && t._f ? {\n        [e]: t\n      } : t);\n    }))).every(Boolean), (s || i.isValid) && k()) : s = r = await B(y);\n\n    return V.state.next({ ...(!M(e) || A.isValid && r !== i.isValid ? {} : {\n        name: e\n      }),\n      ...(n.resolver || !e ? {\n        isValid: r\n      } : {}),\n      errors: i.errors,\n      isValidating: !1\n    }), t.shouldFocus && !s && z(y, e => e && d(i.errors, e), e ? a : _.mount), s;\n  },\n        J = e => {\n    const t = { ...g,\n      ...(p.mount ? h : {})\n    };\n    return c(e) ? t : M(e) ? d(t, e) : e.map(e => d(t, e));\n  },\n        ee = (e, t) => ({\n    invalid: !!d((t || i).errors, e),\n    isDirty: !!d((t || i).dirtyFields, e),\n    isTouched: !!d((t || i).touchedFields, e),\n    error: d((t || i).errors, e)\n  }),\n        re = (e, t = {}) => {\n    for (const r of e ? O(e) : _.mount) _.mount.delete(r), _.array.delete(r), d(y, r) && (t.keepValue || (be(y, r), be(h, r)), !t.keepError && be(i.errors, r), !t.keepDirty && be(i.dirtyFields, r), !t.keepTouched && be(i.touchedFields, r), !n.shouldUnregister && !t.keepDefaultValue && be(g, r));\n\n    V.watch.next({}), V.state.next({ ...i,\n      ...(t.keepDirty ? {\n        isDirty: T()\n      } : {})\n    }), !t.keepIsValid && k();\n  },\n        se = (e, t = {}) => {\n    let s = d(y, e);\n    const a = X(t.disabled);\n    return H(y, e, { ...(s || {}),\n      _f: { ...(s && s._f ? s._f : {\n          ref: {\n            name: e\n          }\n        }),\n        name: e,\n        mount: !0,\n        ...t\n      }\n    }), _.mount.add(e), s ? a && H(h, e, t.disabled ? void 0 : d(h, e, Ue(s._f))) : D(e, !0, t.value), { ...(a ? {\n        disabled: t.disabled\n      } : {}),\n      ...(n.shouldUseNativeValidation ? {\n        required: !!t.required,\n        min: Be(t.min),\n        max: Be(t.max),\n        minLength: Be(t.minLength),\n        maxLength: Be(t.maxLength),\n        pattern: Be(t.pattern)\n      } : {}),\n      name: e,\n      onChange: I,\n      onBlur: I,\n      ref: a => {\n        if (a) {\n          se(e, t), s = d(y, e);\n\n          const n = c(a.value) && a.querySelectorAll && a.querySelectorAll(\"input,select,textarea\")[0] || a,\n                i = (e => te(e) || r(e))(n),\n                o = s._f.refs || [];\n\n          if (i ? o.find(e => e === n) : n === s._f.ref) return;\n          H(y, e, {\n            _f: { ...s._f,\n              ...(i ? {\n                refs: [...o.filter(ke), n, ...(Array.isArray(d(g, e)) ? [{}] : [])],\n                ref: {\n                  type: n.type,\n                  name: e\n                }\n              } : {\n                ref: n\n              })\n            }\n          }), D(e, !1, void 0, n);\n        } else s = d(y, e, {}), s._f && (s._f.mount = !1), (n.shouldUnregister || t.shouldUnregister) && (!u(_.array, e) || !p.action) && _.unMount.add(e);\n      }\n    };\n  },\n        ae = () => n.shouldFocusError && z(y, e => e && d(i.errors, e), _.mount);\n\n  return {\n    control: {\n      register: se,\n      unregister: re,\n      getFieldState: ee,\n      _executeSchema: U,\n      _focusError: ae,\n      _getWatch: q,\n      _getDirty: T,\n      _updateValid: k,\n      _removeUnmounted: () => {\n        for (const e of _.unMount) {\n          const t = d(y, e);\n          t && (t._f.refs ? t._f.refs.every(e => !ke(e)) : !ke(t._f.ref)) && re(e);\n        }\n\n        _.unMount = new Set();\n      },\n      _updateFieldArray: (e, t = [], r, s, a = !0, n = !0) => {\n        if (s && r) {\n          if (p.action = !0, n && Array.isArray(d(y, e))) {\n            const t = r(d(y, e), s.argA, s.argB);\n            a && H(y, e, t);\n          }\n\n          if (A.errors && n && Array.isArray(d(i.errors, e))) {\n            const t = r(d(i.errors, e), s.argA, s.argB);\n            a && H(i.errors, e, t), ((e, t) => {\n              !l(d(e, t)).length && be(e, t);\n            })(i.errors, e);\n          }\n\n          if (A.touchedFields && n && Array.isArray(d(i.touchedFields, e))) {\n            const t = r(d(i.touchedFields, e), s.argA, s.argB);\n            a && H(i.touchedFields, e, t);\n          }\n\n          A.dirtyFields && (i.dirtyFields = je(g, h)), V.state.next({\n            isDirty: T(e, t),\n            dirtyFields: i.dirtyFields,\n            errors: i.errors,\n            isValid: i.isValid\n          });\n        } else H(h, e, t);\n      },\n      _getFieldArray: t => l(d(p.mount ? h : g, t, e.shouldUnregister ? d(g, t, []) : [])),\n      _subjects: V,\n      _proxyFormState: A,\n\n      get _fields() {\n        return y;\n      },\n\n      get _formValues() {\n        return h;\n      },\n\n      get _stateFlags() {\n        return p;\n      },\n\n      set _stateFlags(e) {\n        p = e;\n      },\n\n      get _defaultValues() {\n        return g;\n      },\n\n      get _names() {\n        return _;\n      },\n\n      set _names(e) {\n        _ = e;\n      },\n\n      get _formState() {\n        return i;\n      },\n\n      set _formState(e) {\n        i = e;\n      },\n\n      get _options() {\n        return n;\n      },\n\n      set _options(e) {\n        n = { ...n,\n          ...e\n        };\n      }\n\n    },\n    trigger: G,\n    register: se,\n    handleSubmit: (e, t) => async r => {\n      r && (r.preventDefault && r.preventDefault(), r.persist && r.persist());\n      let s = !0,\n          a = R(h);\n      V.state.next({\n        isSubmitting: !0\n      });\n\n      try {\n        if (n.resolver) {\n          const {\n            errors: e,\n            values: t\n          } = await U();\n          i.errors = e, a = t;\n        } else await B(y);\n\n        E(i.errors) ? (V.state.next({\n          errors: {},\n          isSubmitting: !0\n        }), await e(a, r)) : (t && (await t({ ...i.errors\n        }, r)), ae());\n      } catch (e) {\n        throw s = !1, e;\n      } finally {\n        i.isSubmitted = !0, V.state.next({\n          isSubmitted: !0,\n          isSubmitting: !1,\n          isSubmitSuccessful: E(i.errors) && s,\n          submitCount: i.submitCount + 1,\n          errors: i.errors\n        });\n      }\n    },\n    watch: (e, t) => Z(e) ? V.watch.subscribe({\n      next: r => e(q(void 0, t), r)\n    }) : q(e, t, !0),\n    setValue: $,\n    getValues: J,\n    reset: (t, r) => ((t, r = {}) => {\n      const s = t || g,\n            a = R(s),\n            n = t && !E(t) ? a : g;\n\n      if (r.keepDefaultValues || (g = s), !r.keepValues) {\n        if (r.keepDirtyValues) for (const e of _.mount) d(i.dirtyFields, e) ? H(n, e, d(h, e)) : $(e, d(n, e));else {\n          if (L && c(t)) for (const e of _.mount) {\n            const t = d(y, e);\n\n            if (t && t._f) {\n              const e = Array.isArray(t._f.refs) ? t._f.refs[0] : t._f.ref;\n\n              if (Se(e)) {\n                const t = e.closest(\"form\");\n\n                if (t) {\n                  t.reset();\n                  break;\n                }\n              }\n            }\n          }\n          y = {};\n        }\n        h = e.shouldUnregister ? r.keepDefaultValues ? R(g) : {} : a, V.array.next({\n          values: n\n        }), V.watch.next({\n          values: n\n        });\n      }\n\n      _ = {\n        mount: new Set(),\n        unMount: new Set(),\n        array: new Set(),\n        watch: new Set(),\n        watchAll: !1,\n        focus: \"\"\n      }, p.mount = !A.isValid || !!r.keepIsValid, p.watch = !!e.shouldUnregister, V.state.next({\n        submitCount: r.keepSubmitCount ? i.submitCount : 0,\n        isDirty: r.keepDirty || r.keepDirtyValues ? i.isDirty : !(!r.keepDefaultValues || Fe(t, g)),\n        isSubmitted: !!r.keepIsSubmitted && i.isSubmitted,\n        dirtyFields: r.keepDirty || r.keepDirtyValues ? i.dirtyFields : r.keepDefaultValues && t ? je(g, t) : {},\n        touchedFields: r.keepTouched ? i.touchedFields : {},\n        errors: r.keepErrors ? i.errors : {},\n        isSubmitting: !1,\n        isSubmitSuccessful: !1\n      });\n    })(Z(t) ? t(h) : t, r),\n    resetField: (e, t = {}) => {\n      d(y, e) && (c(t.defaultValue) ? $(e, d(g, e)) : ($(e, t.defaultValue), H(g, e, t.defaultValue)), t.keepTouched || be(i.touchedFields, e), t.keepDirty || (be(i.dirtyFields, e), i.isDirty = t.defaultValue ? T(e, d(g, e)) : T()), t.keepError || (be(i.errors, e), A.isValid && k()), V.state.next({ ...i\n      }));\n    },\n    clearErrors: e => {\n      e ? O(e).forEach(e => be(i.errors, e)) : i.errors = {}, V.state.next({\n        errors: i.errors\n      });\n    },\n    unregister: re,\n    setError: (e, t, r) => {\n      const s = (d(y, e, {\n        _f: {}\n      })._f || {}).ref;\n      H(i.errors, e, { ...t,\n        ref: s\n      }), V.state.next({\n        name: e,\n        errors: i.errors,\n        isValid: !1\n      }), r && r.shouldFocus && s && s.focus && s.focus();\n    },\n    setFocus: (e, t = {}) => {\n      const r = d(y, e),\n            s = r && r._f;\n\n      if (s) {\n        const e = s.refs ? s.refs[0] : s.ref;\n        e.focus && (e.focus(), t.shouldSelect && e.select());\n      }\n    },\n    getFieldState: ee\n  };\n}\n\nexports.Controller = e => e.render(P(e)), exports.FormProvider = e => {\n  const {\n    children: r,\n    ...s\n  } = e;\n  return t.default.createElement(k.Provider, {\n    value: s\n  }, r);\n}, exports.appendErrors = W, exports.get = d, exports.set = H, exports.useController = P, exports.useFieldArray = function (e) {\n  const r = D(),\n        {\n    control: s = r.control,\n    name: a,\n    keyName: n = \"id\",\n    shouldUnregister: i\n  } = e,\n        [o, u] = t.default.useState(s._getFieldArray(a)),\n        l = t.default.useRef(s._getFieldArray(a).map(G)),\n        c = t.default.useRef(o),\n        f = t.default.useRef(a),\n        m = t.default.useRef(!1);\n  f.current = a, c.current = o, s._names.array.add(a), e.rules && s.register(a, e.rules), B({\n    callback: t.default.useCallback(({\n      values: e,\n      name: t\n    }) => {\n      if (t === f.current || !t) {\n        const t = d(e, f.current);\n        Array.isArray(t) && (u(t), l.current = t.map(G));\n      }\n    }, []),\n    subject: s._subjects.array\n  });\n  const y = t.default.useCallback(e => {\n    m.current = !0, s._updateFieldArray(a, e);\n  }, [s, a]);\n  return t.default.useEffect(() => {\n    if (s._stateFlags.action = !1, K(a, s._names) && s._subjects.state.next({}), m.current && (!me(s._options.mode).isOnSubmit || s._formState.isSubmitted)) if (s._options.resolver) s._executeSchema([a]).then(e => {\n      const t = d(e.errors, a),\n            r = d(s._formState.errors, a);\n      (r ? !t && r.type : t && t.type) && (t ? H(s._formState.errors, a, t) : be(s._formState.errors, a), s._subjects.state.next({\n        errors: s._formState.errors\n      }));\n    });else {\n      const e = d(s._fields, a);\n      e && e._f && ce(e, d(s._formValues, a), s._options.criteriaMode === v, s._options.shouldUseNativeValidation, !0).then(e => !E(e) && s._subjects.state.next({\n        errors: Q(s._formState.errors, e, a)\n      }));\n    }\n    s._subjects.watch.next({\n      name: a,\n      values: s._formValues\n    }), s._names.focus && z(s._fields, e => !!e && e.startsWith(s._names.focus)), s._names.focus = \"\", s._proxyFormState.isValid && s._updateValid();\n  }, [o, a, s]), t.default.useEffect(() => (!d(s._formValues, a) && s._updateFieldArray(a), () => {\n    (s._options.shouldUnregister || i) && s.unregister(a);\n  }), [a, s, n, i]), {\n    swap: t.default.useCallback((e, t) => {\n      const r = s._getFieldArray(a);\n\n      _e(r, e, t), _e(l.current, e, t), y(r), u(r), s._updateFieldArray(a, r, _e, {\n        argA: e,\n        argB: t\n      }, !1);\n    }, [y, a, s]),\n    move: t.default.useCallback((e, t) => {\n      const r = s._getFieldArray(a);\n\n      ge(r, e, t), ge(l.current, e, t), y(r), u(r), s._updateFieldArray(a, r, ge, {\n        argA: e,\n        argB: t\n      }, !1);\n    }, [y, a, s]),\n    prepend: t.default.useCallback((e, t) => {\n      const r = O(R(e)),\n            n = he(s._getFieldArray(a), r);\n      s._names.focus = J(a, 0, t), l.current = he(l.current, r.map(G)), y(n), u(n), s._updateFieldArray(a, n, he, {\n        argA: fe(e)\n      });\n    }, [y, a, s]),\n    append: t.default.useCallback((e, t) => {\n      const r = O(R(e)),\n            n = de(s._getFieldArray(a), r);\n      s._names.focus = J(a, n.length - 1, t), l.current = de(l.current, r.map(G)), y(n), u(n), s._updateFieldArray(a, n, de, {\n        argA: fe(e)\n      });\n    }, [y, a, s]),\n    remove: t.default.useCallback(e => {\n      const t = pe(s._getFieldArray(a), e);\n      l.current = pe(l.current, e), y(t), u(t), s._updateFieldArray(a, t, pe, {\n        argA: e\n      });\n    }, [y, a, s]),\n    insert: t.default.useCallback((e, t, r) => {\n      const n = O(R(t)),\n            i = ye(s._getFieldArray(a), e, n);\n      s._names.focus = J(a, e, r), l.current = ye(l.current, e, n.map(G)), y(i), u(i), s._updateFieldArray(a, i, ye, {\n        argA: e,\n        argB: fe(t)\n      });\n    }, [y, a, s]),\n    update: t.default.useCallback((e, t) => {\n      const r = R(t),\n            n = xe(s._getFieldArray(a), e, r);\n      l.current = [...n].map((t, r) => t && r !== e ? l.current[r] : G()), y(n), u([...n]), s._updateFieldArray(a, n, xe, {\n        argA: e,\n        argB: r\n      }, !0, !1);\n    }, [y, a, s]),\n    replace: t.default.useCallback(e => {\n      const t = O(R(e));\n      l.current = t.map(G), y([...t]), u([...t]), s._updateFieldArray(a, [...t], e => e, {}, !0, !1);\n    }, [y, a, s]),\n    fields: t.default.useMemo(() => o.map((e, t) => ({ ...e,\n      [n]: l.current[t] || G()\n    })), [o, n])\n  };\n}, exports.useForm = function (e = {}) {\n  const r = t.default.useRef(),\n        [s, a] = t.default.useState({\n    isDirty: !1,\n    isValidating: !1,\n    isSubmitted: !1,\n    isSubmitting: !1,\n    isSubmitSuccessful: !1,\n    isValid: !1,\n    submitCount: 0,\n    dirtyFields: {},\n    touchedFields: {},\n    errors: {},\n    defaultValues: e.defaultValues\n  });\n  r.current || (r.current = { ...Ne(e),\n    formState: s\n  });\n  const n = r.current.control;\n  return n._options = e, B({\n    subject: n._subjects.state,\n    callback: t.default.useCallback(e => {\n      j(e, n._proxyFormState, !0) && (n._formState = { ...n._formState,\n        ...e\n      }, a({ ...n._formState\n      }));\n    }, [n])\n  }), t.default.useEffect(() => {\n    n._stateFlags.mount || (n._proxyFormState.isValid && n._updateValid(), n._stateFlags.mount = !0), n._stateFlags.watch && (n._stateFlags.watch = !1, n._subjects.state.next({})), n._removeUnmounted();\n  }), t.default.useEffect(() => {\n    s.submitCount && n._focusError();\n  }, [n, s.submitCount]), r.current.formState = C(s, n), r.current;\n}, exports.useFormContext = D, exports.useFormState = T, exports.useWatch = q;","map":{"version":3,"sources":["../src/utils/isCheckBoxInput.ts","../src/utils/isDateObject.ts","../src/utils/isNullOrUndefined.ts","../src/utils/isObject.ts","../src/logic/getEventValue.ts","../src/logic/isNameInFieldArray.ts","../src/logic/getNodeParentName.ts","../src/utils/compact.ts","../src/utils/isUndefined.ts","../src/utils/get.ts","../src/constants.ts","../src/useFormContext.tsx","../src/logic/getProxyFormState.ts","../src/utils/isEmptyObject.ts","../src/logic/shouldRenderFormState.ts","../src/utils/convertToArrayPayload.ts","../src/logic/shouldSubscribeByName.ts","../src/useSubscribe.ts","../src/useFormState.ts","../src/utils/isString.ts","../src/logic/generateWatchOutput.ts","../src/utils/isWeb.ts","../src/utils/cloneObject.ts","../src/utils/isPlainObject.ts","../src/useWatch.ts","../src/useController.ts","../src/logic/appendErrors.ts","../src/utils/isKey.ts","../src/utils/stringToPath.ts","../src/utils/set.ts","../src/logic/focusFieldBy.ts","../src/logic/generateId.ts","../src/logic/getFocusFieldName.ts","../src/logic/isWatched.ts","../src/logic/updateFieldArrayRootError.ts","../src/utils/isBoolean.ts","../src/utils/isFileInput.ts","../src/utils/isFunction.ts","../src/utils/isMessage.ts","../src/utils/isRadioInput.ts","../src/utils/isRegex.ts","../src/logic/getCheckboxValue.ts","../src/logic/getRadioValue.ts","../src/logic/getValidateError.ts","../src/logic/getValueAndMessage.ts","../src/logic/validateField.ts","../src/utils/append.ts","../src/utils/fillEmptyArray.ts","../src/utils/getValidationModes.ts","../src/utils/insert.ts","../src/utils/move.ts","../src/utils/prepend.ts","../src/utils/remove.ts","../src/utils/swap.ts","../src/utils/unset.ts","../src/utils/update.ts","../src/utils/createSubject.ts","../src/utils/isPrimitive.ts","../src/utils/deepEqual.ts","../src/utils/isHTMLElement.ts","../src/utils/isMultipleSelect.ts","../src/utils/live.ts","../src/utils/objectHasFunction.ts","../src/logic/getDirtyFields.ts","../src/logic/getFieldValueAs.ts","../src/logic/getFieldValue.ts","../src/logic/getResolverOptions.ts","../src/logic/getRuleValue.ts","../src/logic/schemaErrorLookup.ts","../src/logic/createFormControl.ts","../src/logic/hasValidation.ts","../src/logic/skipValidation.ts","../src/utils/isRadioOrCheckbox.ts","../src/logic/unsetEmptyArray.ts","../src/controller.tsx","../src/useFieldArray.ts","../src/useForm.ts"],"names":["isCheckBoxInput","element","type","isDateObject","value","Date","isNullOrUndefined","isObjectType","Array","isArray","getEventValue","event","isObject","target","checked","isNameInFieldArray","names","name","has","getNodeParentName","substring","search","compact","filter","Boolean","isUndefined","val","undefined","get","obj","path","defaultValue","result","split","reduce","key","EVENTS","VALIDATION_MODE","INPUT_VALIDATION_RULES","HookFormContext","React","createContext","useFormContext","useContext","props","children","data","Provider","getProxyFormState","formState","control","localProxyFormState","isRoot","defaultValues","_defaultValues","Object","defineProperty","_key","_proxyFormState","isEmptyObject","keys","length","shouldRenderFormState","formStateData","find","convertToArrayPayload","shouldSubscribeByName","signalName","exact","some","currentName","startsWith","useSubscribe","_props","useRef","current","useEffect","subscription","disabled","subject","subscribe","next","callback","unsubscribe","useFormState","methods","updateFormState","useState","_formState","_mounted","_localProxyFormState","isDirty","dirtyFields","touchedFields","isValidating","isValid","errors","_name","useCallback","_subjects","state","generateWatchOutput","_names","formValues","isGlobal","isString","watch","add","map","fieldName","watchAll","isWeb","window","HTMLElement","document","copy","Set","Blob","FileList","isPlainObject","cloneObject","tempObject","prototypeCopy","constructor","prototype","hasOwnProperty","useWatch","fieldValues","values","_formValues","updateValue","_getWatch","_removeUnmounted","useController","shouldUnregister","isArrayField","array","_registerProps","register","rules","updateMounted","field","_fields","_f","mount","_shouldUnregisterField","_options","_stateFlags","action","unregister","onChange","onBlur","ref","elm","focus","select","setCustomValidity","message","reportValidity","fieldState","defineProperties","invalid","enumerable","isTouched","error","appendErrors","validateAllFieldCriteria","types","isKey","test","stringToPath","input","replace","object","index","tempPath","lastIndex","newValue","objValue","isNaN","focusFieldBy","fields","fieldsNames","currentField","refs","d","performance","now","c","r","Math","random","toString","getFocusFieldName","options","shouldFocus","focusName","focusIndex","isWatched","isBlurEvent","watchName","slice","updateFieldArrayRootError","fieldArrayErrors","set","isBoolean","isFileInput","isFunction","isMessage","isValidElement","isRadioInput","isRegex","RegExp","defaultResult","validResult","getCheckboxValue","option","attributes","defaultReturn","getRadioValue","previous","getValidateError","every","validationData","validateField","inputValue","shouldUseNativeValidation","isFieldArray","required","maxLength","minLength","min","max","pattern","validate","valueAsNumber","inputRef","isRadio","isCheckBox","isRadioOrCheckbox","isEmpty","appendErrorsCurry","bind","getMinMaxMessage","exceedMax","maxLengthMessage","minLengthMessage","maxType","minType","getValueAndMessage","exceedMin","maxOutput","minOutput","valueNumber","valueDate","valueAsDate","convertTimeToDate","time","toDateString","isTime","isWeek","maxLengthOutput","minLengthOutput","patternValue","match","validateError","validationResult","append","getValidationModes","mode","isOnSubmit","isOnBlur","isOnChange","isOnAll","isOnTouch","from","to","splice","prepend","indexes","i","temp","removeArrayAt","removeAtIndexes","sort","a","b","swapArrayAt","indexA","indexB","updatePath","isEmptyArray","unset","childObject","baseGet","previousObjRef","k","objectRef","currentPaths","currentPathsLength","item","createSubject","_observers","observer","push","o","observers","deepEqual","object1","object2","isPrimitive","getTime","keys1","keys2","val1","includes","val2","isHTMLElement","owner","ownerDocument","defaultView","isMultipleSelect","live","isConnected","objectHasFunction","markFieldsDirty","isParentNodeArray","getDirtyFieldsFromDefaultValues","dirtyFieldsFromValues","getFieldValueAs","setValueAs","NaN","files","selectedOptions","criteriaMode","getRuleValue","rule","source","join","foundError","pop","defaultOptions","reValidateMode","shouldFocusError","submitCount","isSubmitted","isSubmitting","isSubmitSuccessful","unMount","delayErrorCallback","timer","validateFields","validationModeBeforeSubmit","validationModeAfterSubmit","shouldDisplayAllAssociatedErrors","wait","clearTimeout","setTimeout","_updateValid","async","resolver","_executeSchema","executeBuiltInValidation","method","args","shouldSetValues","shouldUpdateFieldsAndState","argA","argB","unsetEmptyArray","getDirtyFields","_getDirty","updateValidAndValue","shouldSkipSetValueAs","defaultChecked","getFieldValue","setFieldValue","updateTouchAndDirty","fieldValue","shouldDirty","shouldRender","isFieldDirty","output","isPreviousFieldTouched","isPreviousFormDirty","isPreviousFieldDirty","shouldRenderByError","previousFieldError","shouldUpdateValid","delayError","updatedFormState","v","context","shouldOnlyCheckValid","valid","isFieldArrayRoot","fieldError","getValues","fieldReference","forEach","optionRef","selected","checkboxRef","radioRef","shouldTouch","shouldValidate","trigger","setValues","fieldKey","setValue","cloneValue","shouldSkipValidation","deps","skipValidation","watched","previousErrorLookupResult","schemaErrorLookup","errorLookupResult","fieldNames","Promise","all","getFieldState","inputName","info","delete","keepValue","keepError","keepDirty","keepTouched","keepDefaultValue","keepIsValid","disabledIsDefined","fieldRef","querySelectorAll","radioOrCheckbox","_focusError","onValid","onInvalid","e","preventDefault","persist","hasNoPromiseError","err","keepStateOptions","updatedValues","cloneUpdatedValues","keepDefaultValues","keepValues","keepDirtyValues","form","closest","reset","keepSubmitCount","keepIsSubmitted","keepErrors","shouldSelect","_updateFieldArray","_getFieldArray","handleSubmit","resetField","clearErrors","setError","setFocus","render","keyName","setFields","ids","generateId","_fieldIds","_actioned","fieldArrayName","updateValues","updatedFieldArrayValues","appendValue","appendAt","fillEmptyArray","prependValue","prependAt","insertValue","insertAt","moveArrayAt","updateAt","then","existingError","swap","move","remove","insert","update","useMemo","_formControl","createFormControl"],"mappings":"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","sourcesContent":["import { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'checkbox';\n","export default (value: unknown): value is Date => value instanceof Date;\n","export default (value: unknown): value is null | undefined => value == null;\n","import isDateObject from './isDateObject';\nimport isNullOrUndefined from './isNullOrUndefined';\n\nexport const isObjectType = (value: unknown) => typeof value === 'object';\n\nexport default <T extends object>(value: unknown): value is T =>\n  !isNullOrUndefined(value) &&\n  !Array.isArray(value) &&\n  isObjectType(value) &&\n  !isDateObject(value);\n","import isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isObject from '../utils/isObject';\n\ntype Event = { target: any };\n\nexport default (event: unknown) =>\n  isObject(event) && (event as Event).target\n    ? isCheckBoxInput((event as Event).target)\n      ? (event as Event).target.checked\n      : (event as Event).target.value\n    : event;\n","import { InternalFieldName } from '../types';\n\nimport getNodeParentName from './getNodeParentName';\n\nexport default (names: Set<InternalFieldName>, name: InternalFieldName) =>\n  names.has(getNodeParentName(name));\n","export default (name: string) =>\n  name.substring(0, name.search(/\\.\\d+(\\.|$)/)) || name;\n","export default <TValue>(value: TValue[]) =>\n  Array.isArray(value) ? value.filter(Boolean) : [];\n","export default (val: unknown): val is undefined => val === undefined;\n","import compact from './compact';\nimport isNullOrUndefined from './isNullOrUndefined';\nimport isObject from './isObject';\nimport isUndefined from './isUndefined';\n\nexport default <T>(obj: T, path: string, defaultValue?: unknown): any => {\n  if (!path || !isObject(obj)) {\n    return defaultValue;\n  }\n\n  const result = compact(path.split(/[,[\\].]+?/)).reduce(\n    (result, key) =>\n      isNullOrUndefined(result) ? result : result[key as keyof {}],\n    obj,\n  );\n\n  return isUndefined(result) || result === obj\n    ? isUndefined(obj[path as keyof T])\n      ? defaultValue\n      : obj[path as keyof T]\n    : result;\n};\n","import { ValidationMode } from './types';\n\nexport const EVENTS = {\n  BLUR: 'blur',\n  FOCUS_OUT: 'focusout',\n  CHANGE: 'change',\n};\n\nexport const VALIDATION_MODE: ValidationMode = {\n  onBlur: 'onBlur',\n  onChange: 'onChange',\n  onSubmit: 'onSubmit',\n  onTouched: 'onTouched',\n  all: 'all',\n};\n\nexport const INPUT_VALIDATION_RULES = {\n  max: 'max',\n  min: 'min',\n  maxLength: 'maxLength',\n  minLength: 'minLength',\n  pattern: 'pattern',\n  required: 'required',\n  validate: 'validate',\n};\n","import React from 'react';\n\nimport { FieldValues, FormProviderProps, UseFormReturn } from './types';\n\nconst HookFormContext = React.createContext<UseFormReturn | null>(null);\n\n/**\n * This custom hook allows you to access the form context. useFormContext is intended to be used in deeply nested structures, where it would become inconvenient to pass the context as a prop. To be used with {@link FormProvider}.\n *\n * @remarks\n * [API](https://react-hook-form.com/api/useformcontext) • [Demo](https://codesandbox.io/s/react-hook-form-v7-form-context-ytudi)\n *\n * @returns return all useForm methods\n *\n * @example\n * ```tsx\n * function App() {\n *   const methods = useForm();\n *   const onSubmit = data => console.log(data);\n *\n *   return (\n *     <FormProvider {...methods} >\n *       <form onSubmit={methods.handleSubmit(onSubmit)}>\n *         <NestedInput />\n *         <input type=\"submit\" />\n *       </form>\n *     </FormProvider>\n *   );\n * }\n *\n *  function NestedInput() {\n *   const { register } = useFormContext(); // retrieve all hook methods\n *   return <input {...register(\"test\")} />;\n * }\n * ```\n */\nexport const useFormContext = <\n  TFieldValues extends FieldValues,\n>(): UseFormReturn<TFieldValues> =>\n  React.useContext(HookFormContext) as unknown as UseFormReturn<TFieldValues>;\n\n/**\n * A provider component that propagates the `useForm` methods to all children components via [React Context](https://reactjs.org/docs/context.html) API. To be used with {@link useFormContext}.\n *\n * @remarks\n * [API](https://react-hook-form.com/api/useformcontext) • [Demo](https://codesandbox.io/s/react-hook-form-v7-form-context-ytudi)\n *\n * @param props - all useFrom methods\n *\n * @example\n * ```tsx\n * function App() {\n *   const methods = useForm();\n *   const onSubmit = data => console.log(data);\n *\n *   return (\n *     <FormProvider {...methods} >\n *       <form onSubmit={methods.handleSubmit(onSubmit)}>\n *         <NestedInput />\n *         <input type=\"submit\" />\n *       </form>\n *     </FormProvider>\n *   );\n * }\n *\n *  function NestedInput() {\n *   const { register } = useFormContext(); // retrieve all hook methods\n *   return <input {...register(\"test\")} />;\n * }\n * ```\n */\nexport const FormProvider = <TFieldValues extends FieldValues, TContext = any>(\n  props: FormProviderProps<TFieldValues, TContext>,\n) => {\n  const { children, ...data } = props;\n  return (\n    <HookFormContext.Provider value={data as unknown as UseFormReturn}>\n      {children}\n    </HookFormContext.Provider>\n  );\n};\n","import { VALIDATION_MODE } from '../constants';\nimport { Control, FieldValues, FormState, ReadFormState } from '../types';\n\nexport default <TFieldValues extends FieldValues>(\n  formState: FormState<TFieldValues>,\n  control: Control<TFieldValues>,\n  localProxyFormState?: ReadFormState,\n  isRoot = true,\n) => {\n  const result = {\n    defaultValues: control._defaultValues,\n  } as typeof formState;\n\n  for (const key in formState) {\n    Object.defineProperty(result, key, {\n      get: () => {\n        const _key = key as keyof FormState<TFieldValues> & keyof ReadFormState;\n\n        if (control._proxyFormState[_key] !== VALIDATION_MODE.all) {\n          control._proxyFormState[_key] = !isRoot || VALIDATION_MODE.all;\n        }\n\n        localProxyFormState && (localProxyFormState[_key] = true);\n        return formState[_key];\n      },\n    });\n  }\n\n  return result;\n};\n","import { EmptyObject } from '../types';\n\nimport isObject from './isObject';\n\nexport default (value: unknown): value is EmptyObject =>\n  isObject(value) && !Object.keys(value).length;\n","import { VALIDATION_MODE } from '../constants';\nimport { ReadFormState } from '../types';\nimport isEmptyObject from '../utils/isEmptyObject';\n\nexport default <T extends Record<string, any>, K extends ReadFormState>(\n  formStateData: T,\n  _proxyFormState: K,\n  isRoot?: boolean,\n) => {\n  const { name, ...formState } = formStateData;\n\n  return (\n    isEmptyObject(formState) ||\n    Object.keys(formState).length >= Object.keys(_proxyFormState).length ||\n    Object.keys(formState).find(\n      (key) =>\n        _proxyFormState[key as keyof ReadFormState] ===\n        (!isRoot || VALIDATION_MODE.all),\n    )\n  );\n};\n","export default <T>(value: T) => (Array.isArray(value) ? value : [value]);\n","import convertToArrayPayload from '../utils/convertToArrayPayload';\n\nexport default <T extends string | string[] | undefined>(\n  name?: T,\n  signalName?: string,\n  exact?: boolean,\n) =>\n  exact && signalName\n    ? name === signalName\n    : !name ||\n      !signalName ||\n      name === signalName ||\n      convertToArrayPayload(name).some(\n        (currentName) =>\n          currentName &&\n          (currentName.startsWith(signalName) ||\n            signalName.startsWith(currentName)),\n      );\n","import React from 'react';\n\nimport { Subject } from './utils/createSubject';\n\ntype Props<T> = {\n  disabled?: boolean;\n  subject: Subject<T>;\n  callback: (value: T) => void;\n};\n\nexport function useSubscribe<T>(props: Props<T>) {\n  const _props = React.useRef(props);\n  _props.current = props;\n\n  React.useEffect(() => {\n    const subscription =\n      !props.disabled &&\n      _props.current.subject.subscribe({\n        next: _props.current.callback,\n      });\n\n    return () => {\n      subscription && subscription.unsubscribe();\n    };\n  }, [props.disabled]);\n}\n","import React from 'react';\n\nimport getProxyFormState from './logic/getProxyFormState';\nimport shouldRenderFormState from './logic/shouldRenderFormState';\nimport shouldSubscribeByName from './logic/shouldSubscribeByName';\nimport {\n  FieldValues,\n  InternalFieldName,\n  UseFormStateProps,\n  UseFormStateReturn,\n} from './types';\nimport { useFormContext } from './useFormContext';\nimport { useSubscribe } from './useSubscribe';\n\n/**\n * This custom hook allows you to subscribe to each form state, and isolate the re-render at the custom hook level. It has its scope in terms of form state subscription, so it would not affect other useFormState and useForm. Using this hook can reduce the re-render impact on large and complex form application.\n *\n * @remarks\n * [API](https://react-hook-form.com/api/useformstate) • [Demo](https://codesandbox.io/s/useformstate-75xly)\n *\n * @param props - include options on specify fields to subscribe. {@link UseFormStateReturn}\n *\n * @example\n * ```tsx\n * function App() {\n *   const { register, handleSubmit, control } = useForm({\n *     defaultValues: {\n *     firstName: \"firstName\"\n *   }});\n *   const { dirtyFields } = useFormState({\n *     control\n *   });\n *   const onSubmit = (data) => console.log(data);\n *\n *   return (\n *     <form onSubmit={handleSubmit(onSubmit)}>\n *       <input {...register(\"firstName\")} placeholder=\"First Name\" />\n *       {dirtyFields.firstName && <p>Field is dirty.</p>}\n *       <input type=\"submit\" />\n *     </form>\n *   );\n * }\n * ```\n */\nfunction useFormState<TFieldValues extends FieldValues = FieldValues>(\n  props?: UseFormStateProps<TFieldValues>,\n): UseFormStateReturn<TFieldValues> {\n  const methods = useFormContext<TFieldValues>();\n  const { control = methods.control, disabled, name, exact } = props || {};\n  const [formState, updateFormState] = React.useState(control._formState);\n  const _mounted = React.useRef(true);\n  const _localProxyFormState = React.useRef({\n    isDirty: false,\n    dirtyFields: false,\n    touchedFields: false,\n    isValidating: false,\n    isValid: false,\n    errors: false,\n  });\n  const _name = React.useRef(name);\n\n  _name.current = name;\n\n  useSubscribe({\n    disabled,\n    callback: React.useCallback(\n      (value: { name?: InternalFieldName }) =>\n        _mounted.current &&\n        shouldSubscribeByName(\n          _name.current as InternalFieldName,\n          value.name,\n          exact,\n        ) &&\n        shouldRenderFormState(value, _localProxyFormState.current) &&\n        updateFormState({\n          ...control._formState,\n          ...value,\n        }),\n      [control, exact],\n    ),\n    subject: control._subjects.state,\n  });\n\n  React.useEffect(() => {\n    _mounted.current = true;\n    return () => {\n      _mounted.current = false;\n    };\n  }, []);\n\n  return getProxyFormState(\n    formState,\n    control,\n    _localProxyFormState.current,\n    false,\n  );\n}\n\nexport { useFormState };\n","export default (value: unknown): value is string => typeof value === 'string';\n","import { FieldValues, InternalFieldName, Names } from '../types';\nimport get from '../utils/get';\nimport isString from '../utils/isString';\n\nexport default (\n  names: string | string[] | undefined,\n  _names: Names,\n  formValues?: FieldValues,\n  isGlobal?: boolean,\n) => {\n  const isArray = Array.isArray(names);\n  if (isString(names)) {\n    isGlobal && _names.watch.add(names as InternalFieldName);\n    return get(formValues, names as InternalFieldName);\n  }\n\n  if (isArray) {\n    return names.map(\n      (fieldName) => (\n        isGlobal && _names.watch.add(fieldName as InternalFieldName),\n        get(formValues, fieldName as InternalFieldName)\n      ),\n    );\n  }\n\n  isGlobal && (_names.watchAll = true);\n  return formValues;\n};\n","export default typeof window !== 'undefined' &&\n  typeof window.HTMLElement !== 'undefined' &&\n  typeof document !== 'undefined';\n","import isObject from './isObject';\nimport isPlainObject from './isPlainObject';\nimport isWeb from './isWeb';\n\nexport default function cloneObject<T>(data: T): T {\n  let copy: any;\n  const isArray = Array.isArray(data);\n\n  if (data instanceof Date) {\n    copy = new Date(data);\n  } else if (data instanceof Set) {\n    copy = new Set(data);\n  } else if (\n    !(isWeb && (data instanceof Blob || data instanceof FileList)) &&\n    (isArray || isObject(data))\n  ) {\n    copy = isArray ? [] : {};\n\n    if (!Array.isArray(data) && !isPlainObject(data)) {\n      copy = data;\n    } else {\n      for (const key in data) {\n        copy[key] = cloneObject(data[key]);\n      }\n    }\n  } else {\n    return data;\n  }\n\n  return copy;\n}\n","import isObject from './isObject';\n\nexport default (tempObject: object) => {\n  const prototypeCopy =\n    tempObject.constructor && tempObject.constructor.prototype;\n\n  return (\n    isObject(prototypeCopy) && prototypeCopy.hasOwnProperty('isPrototypeOf')\n  );\n};\n","import React from 'react';\n\nimport generateWatchOutput from './logic/generateWatchOutput';\nimport shouldSubscribeByName from './logic/shouldSubscribeByName';\nimport cloneObject from './utils/cloneObject';\nimport isUndefined from './utils/isUndefined';\nimport {\n  Control,\n  DeepPartialSkipArrayKey,\n  FieldPath,\n  FieldPathValue,\n  FieldPathValues,\n  FieldValues,\n  InternalFieldName,\n  UseWatchProps,\n} from './types';\nimport { useFormContext } from './useFormContext';\nimport { useSubscribe } from './useSubscribe';\n\n/**\n * Subscribe to the entire form values change and re-render at the hook level.\n *\n * @remarks\n *\n * [API](https://react-hook-form.com/api/usewatch) • [Demo](https://codesandbox.io/s/react-hook-form-v7-ts-usewatch-h9i5e)\n *\n * @param props - defaultValue, disable subscription and match exact name.\n *\n * @example\n * ```tsx\n * const { watch } = useForm();\n * const values = useWatch({\n *   control,\n *   defaultValue: {\n *     name: \"data\"\n *   },\n *   exact: false,\n * })\n * ```\n */\nexport function useWatch<\n  TFieldValues extends FieldValues = FieldValues,\n>(props: {\n  defaultValue?: DeepPartialSkipArrayKey<TFieldValues>;\n  control?: Control<TFieldValues>;\n  disabled?: boolean;\n  exact?: boolean;\n}): DeepPartialSkipArrayKey<TFieldValues>;\n/**\n * Custom hook to subscribe to field change and isolate re-rendering at the component level.\n *\n * @remarks\n *\n * [API](https://react-hook-form.com/api/usewatch) • [Demo](https://codesandbox.io/s/react-hook-form-v7-ts-usewatch-h9i5e)\n *\n * @param props - defaultValue, disable subscription and match exact name.\n *\n * @example\n * ```tsx\n * const { watch } = useForm();\n * const values = useWatch({\n *   control,\n *   name: \"fieldA\",\n *   defaultValue: \"default value\",\n *   exact: false,\n * })\n * ```\n */\nexport function useWatch<\n  TFieldValues extends FieldValues = FieldValues,\n  TFieldName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n>(props: {\n  name: TFieldName;\n  defaultValue?: FieldPathValue<TFieldValues, TFieldName>;\n  control?: Control<TFieldValues>;\n  disabled?: boolean;\n  exact?: boolean;\n}): FieldPathValue<TFieldValues, TFieldName>;\n/**\n * Custom hook to subscribe to field change and isolate re-rendering at the component level.\n *\n * @remarks\n *\n * [API](https://react-hook-form.com/api/usewatch) • [Demo](https://codesandbox.io/s/react-hook-form-v7-ts-usewatch-h9i5e)\n *\n * @param props - defaultValue, disable subscription and match exact name.\n *\n * @example\n * ```tsx\n * const { watch } = useForm();\n * const values = useWatch({\n *   control,\n *   name: [\"fieldA\", \"fieldB\"],\n *   defaultValue: {\n *     fieldA: \"data\",\n *     fieldB: \"data\"\n *   },\n *   exact: false,\n * })\n * ```\n */\nexport function useWatch<\n  TFieldValues extends FieldValues = FieldValues,\n  TFieldNames extends readonly FieldPath<TFieldValues>[] = readonly FieldPath<TFieldValues>[],\n>(props: {\n  name: readonly [...TFieldNames];\n  defaultValue?: DeepPartialSkipArrayKey<TFieldValues>;\n  control?: Control<TFieldValues>;\n  disabled?: boolean;\n  exact?: boolean;\n}): FieldPathValues<TFieldValues, TFieldNames>;\n/**\n * Custom hook to subscribe to field change and isolate re-rendering at the component level.\n *\n * @remarks\n *\n * [API](https://react-hook-form.com/api/usewatch) • [Demo](https://codesandbox.io/s/react-hook-form-v7-ts-usewatch-h9i5e)\n *\n * @example\n * ```tsx\n * // can skip passing down the control into useWatch if the form is wrapped with the FormProvider\n * const values = useWatch()\n * ```\n */\nexport function useWatch<\n  TFieldValues extends FieldValues = FieldValues,\n>(): DeepPartialSkipArrayKey<TFieldValues>;\n/**\n * Custom hook to subscribe to field change and isolate re-rendering at the component level.\n *\n * @remarks\n *\n * [API](https://react-hook-form.com/api/usewatch) • [Demo](https://codesandbox.io/s/react-hook-form-v7-ts-usewatch-h9i5e)\n *\n * @example\n * ```tsx\n * const { watch } = useForm();\n * const values = useWatch({\n *   name: \"fieldName\"\n *   control,\n * })\n * ```\n */\nexport function useWatch<TFieldValues extends FieldValues>(\n  props?: UseWatchProps<TFieldValues>,\n) {\n  const methods = useFormContext();\n  const {\n    control = methods.control,\n    name,\n    defaultValue,\n    disabled,\n    exact,\n  } = props || {};\n  const _name = React.useRef(name);\n\n  _name.current = name;\n\n  useSubscribe({\n    disabled,\n    subject: control._subjects.watch,\n    callback: React.useCallback(\n      (formState: { name?: InternalFieldName; values?: FieldValues }) => {\n        if (\n          shouldSubscribeByName(\n            _name.current as InternalFieldName,\n            formState.name,\n            exact,\n          )\n        ) {\n          const fieldValues = generateWatchOutput(\n            _name.current as InternalFieldName | InternalFieldName[],\n            control._names,\n            formState.values || control._formValues,\n          );\n\n          updateValue(\n            isUndefined(_name.current) || !isUndefined(fieldValues)\n              ? cloneObject(fieldValues)\n              : isUndefined(fieldValues)\n              ? defaultValue\n              : fieldValues,\n          );\n        }\n      },\n      [control, exact, defaultValue],\n    ),\n  });\n\n  const [value, updateValue] = React.useState<unknown>(\n    isUndefined(defaultValue)\n      ? control._getWatch(name as InternalFieldName)\n      : defaultValue,\n  );\n\n  React.useEffect(() => control._removeUnmounted());\n\n  return value;\n}\n","import React from 'react';\n\nimport getEventValue from './logic/getEventValue';\nimport isNameInFieldArray from './logic/isNameInFieldArray';\nimport get from './utils/get';\nimport { EVENTS } from './constants';\nimport {\n  ControllerFieldState,\n  Field,\n  FieldPath,\n  FieldPathValue,\n  FieldValues,\n  InternalFieldName,\n  UseControllerProps,\n  UseControllerReturn,\n} from './types';\nimport { useFormContext } from './useFormContext';\nimport { useFormState } from './useFormState';\nimport { useWatch } from './useWatch';\n\n/**\n * Custom hook to work with controlled component, this function provide you with both form and field level state. Re-render is isolated at the hook level.\n *\n * @remarks\n * [API](https://react-hook-form.com/api/usecontroller) • [Demo](https://codesandbox.io/s/usecontroller-0o8px)\n *\n * @param props - the path name to the form field value, and validation rules.\n *\n * @returns field properties, field and form state. {@link UseControllerReturn}\n *\n * @example\n * ```tsx\n * function Input(props) {\n *   const { field, fieldState, formState } = useController(props);\n *   return (\n *     <div>\n *       <input {...field} placeholder={props.name} />\n *       <p>{fieldState.isTouched && \"Touched\"}</p>\n *       <p>{formState.isSubmitted ? \"submitted\" : \"\"}</p>\n *     </div>\n *   );\n * }\n * ```\n */\nexport function useController<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n>(\n  props: UseControllerProps<TFieldValues, TName>,\n): UseControllerReturn<TFieldValues, TName> {\n  const methods = useFormContext<TFieldValues>();\n  const { name, control = methods.control, shouldUnregister } = props;\n  const isArrayField = isNameInFieldArray(control._names.array, name);\n  const value = useWatch({\n    control,\n    name,\n    defaultValue: get(\n      control._formValues,\n      name,\n      get(control._defaultValues, name, props.defaultValue),\n    ),\n    exact: true,\n  }) as FieldPathValue<TFieldValues, TName>;\n  const formState = useFormState({\n    control,\n    name,\n  });\n\n  const _registerProps = React.useRef(\n    control.register(name, {\n      ...props.rules,\n      value,\n    }),\n  );\n\n  React.useEffect(() => {\n    const updateMounted = (name: InternalFieldName, value: boolean) => {\n      const field: Field = get(control._fields, name);\n\n      if (field) {\n        field._f.mount = value;\n      }\n    };\n\n    updateMounted(name, true);\n\n    return () => {\n      const _shouldUnregisterField =\n        control._options.shouldUnregister || shouldUnregister;\n\n      (\n        isArrayField\n          ? _shouldUnregisterField && !control._stateFlags.action\n          : _shouldUnregisterField\n      )\n        ? control.unregister(name)\n        : updateMounted(name, false);\n    };\n  }, [name, control, isArrayField, shouldUnregister]);\n\n  return {\n    field: {\n      name,\n      value,\n      onChange: React.useCallback(\n        (event) =>\n          _registerProps.current.onChange({\n            target: {\n              value: getEventValue(event),\n              name: name as InternalFieldName,\n            },\n            type: EVENTS.CHANGE,\n          }),\n        [name],\n      ),\n      onBlur: React.useCallback(\n        () =>\n          _registerProps.current.onBlur({\n            target: {\n              value: get(control._formValues, name),\n              name: name as InternalFieldName,\n            },\n            type: EVENTS.BLUR,\n          }),\n        [name, control],\n      ),\n      ref: (elm) => {\n        const field = get(control._fields, name);\n\n        if (field && elm) {\n          field._f.ref = {\n            focus: () => elm.focus(),\n            select: () => elm.select(),\n            setCustomValidity: (message: string) =>\n              elm.setCustomValidity(message),\n            reportValidity: () => elm.reportValidity(),\n          };\n        }\n      },\n    },\n    formState,\n    fieldState: Object.defineProperties(\n      {},\n      {\n        invalid: {\n          enumerable: true,\n          get: () => !!get(formState.errors, name),\n        },\n        isDirty: {\n          enumerable: true,\n          get: () => !!get(formState.dirtyFields, name),\n        },\n        isTouched: {\n          enumerable: true,\n          get: () => !!get(formState.touchedFields, name),\n        },\n        error: {\n          enumerable: true,\n          get: () => get(formState.errors, name),\n        },\n      },\n    ) as ControllerFieldState,\n  };\n}\n","import {\n  InternalFieldErrors,\n  InternalFieldName,\n  ValidateResult,\n} from '../types';\n\nexport default (\n  name: InternalFieldName,\n  validateAllFieldCriteria: boolean,\n  errors: InternalFieldErrors,\n  type: string,\n  message: ValidateResult,\n) =>\n  validateAllFieldCriteria\n    ? {\n        ...errors[name],\n        types: {\n          ...(errors[name] && errors[name]!.types ? errors[name]!.types : {}),\n          [type]: message || true,\n        },\n      }\n    : {};\n","export default (value: string) => /^\\w*$/.test(value);\n","import compact from './compact';\n\nexport default (input: string): string[] =>\n  compact(input.replace(/[\"|']|\\]/g, '').split(/\\.|\\[/));\n","import { FieldValues } from '../types';\n\nimport isKey from './isKey';\nimport isObject from './isObject';\nimport stringToPath from './stringToPath';\n\nexport default function set(\n  object: FieldValues,\n  path: string,\n  value?: unknown,\n) {\n  let index = -1;\n  const tempPath = isKey(path) ? [path] : stringToPath(path);\n  const length = tempPath.length;\n  const lastIndex = length - 1;\n\n  while (++index < length) {\n    const key = tempPath[index];\n    let newValue = value;\n\n    if (index !== lastIndex) {\n      const objValue = object[key];\n      newValue =\n        isObject(objValue) || Array.isArray(objValue)\n          ? objValue\n          : !isNaN(+tempPath[index + 1])\n          ? []\n          : {};\n    }\n    object[key] = newValue;\n    object = object[key];\n  }\n  return object;\n}\n","import { FieldRefs, InternalFieldName } from '../types';\nimport { get } from '../utils';\nimport isObject from '../utils/isObject';\n\nconst focusFieldBy = (\n  fields: FieldRefs,\n  callback: (name?: string) => boolean,\n  fieldsNames?: Set<InternalFieldName> | InternalFieldName[],\n) => {\n  for (const key of fieldsNames || Object.keys(fields)) {\n    const field = get(fields, key);\n\n    if (field) {\n      const { _f, ...currentField } = field;\n\n      if (_f && callback(_f.name)) {\n        if (_f.ref.focus) {\n          _f.ref.focus();\n          break;\n        } else if (_f.refs && _f.refs[0].focus) {\n          _f.refs[0].focus();\n          break;\n        }\n      } else if (isObject(currentField)) {\n        focusFieldBy(currentField, callback);\n      }\n    }\n  }\n};\n\nexport default focusFieldBy;\n","export default () => {\n  const d =\n    typeof performance === 'undefined' ? Date.now() : performance.now() * 1000;\n\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n    const r = (Math.random() * 16 + d) % 16 | 0;\n\n    return (c == 'x' ? r : (r & 0x3) | 0x8).toString(16);\n  });\n};\n","import { FieldArrayMethodProps, InternalFieldName } from '../types';\nimport isUndefined from '../utils/isUndefined';\n\nexport default (\n  name: InternalFieldName,\n  index: number,\n  options: FieldArrayMethodProps = {},\n): string =>\n  options.shouldFocus || isUndefined(options.shouldFocus)\n    ? options.focusName ||\n      `${name}.${isUndefined(options.focusIndex) ? index : options.focusIndex}.`\n    : '';\n","import { InternalFieldName, Names } from '../types';\n\nexport default (\n  name: InternalFieldName,\n  _names: Names,\n  isBlurEvent?: boolean,\n) =>\n  !isBlurEvent &&\n  (_names.watchAll ||\n    _names.watch.has(name) ||\n    [..._names.watch].some(\n      (watchName) =>\n        name.startsWith(watchName) &&\n        /^\\.\\w+/.test(name.slice(watchName.length)),\n    ));\n","import {\n  FieldError,\n  FieldErrors,\n  FieldValues,\n  InternalFieldName,\n} from '../types';\nimport compact from '../utils/compact';\nimport get from '../utils/get';\nimport set from '../utils/set';\n\nexport default <T extends FieldValues = FieldValues>(\n  errors: FieldErrors<T>,\n  error: Partial<Record<string, FieldError>>,\n  name: InternalFieldName,\n): FieldErrors<T> => {\n  const fieldArrayErrors = compact(get(errors, name));\n  set(fieldArrayErrors, 'root', error[name]);\n  set(errors, name, fieldArrayErrors);\n  return errors;\n};\n","export default (value: unknown): value is boolean => typeof value === 'boolean';\n","import { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'file';\n","export default (value: unknown): value is Function =>\n  typeof value === 'function';\n","import React from 'react';\n\nimport { Message } from '../types';\nimport isString from '../utils/isString';\n\nexport default (value: unknown): value is Message =>\n  isString(value) || React.isValidElement(value as JSX.Element);\n","import { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'radio';\n","export default (value: unknown): value is RegExp => value instanceof RegExp;\n","import isUndefined from '../utils/isUndefined';\n\ntype CheckboxFieldResult = {\n  isValid: boolean;\n  value: string | string[] | boolean | undefined;\n};\n\nconst defaultResult: CheckboxFieldResult = {\n  value: false,\n  isValid: false,\n};\n\nconst validResult = { value: true, isValid: true };\n\nexport default (options?: HTMLInputElement[]): CheckboxFieldResult => {\n  if (Array.isArray(options)) {\n    if (options.length > 1) {\n      const values = options\n        .filter((option) => option && option.checked && !option.disabled)\n        .map((option) => option.value);\n      return { value: values, isValid: !!values.length };\n    }\n\n    return options[0].checked && !options[0].disabled\n      ? // @ts-expect-error expected to work in the browser\n        options[0].attributes && !isUndefined(options[0].attributes.value)\n        ? isUndefined(options[0].value) || options[0].value === ''\n          ? validResult\n          : { value: options[0].value, isValid: true }\n        : validResult\n      : defaultResult;\n  }\n\n  return defaultResult;\n};\n","type RadioFieldResult = {\n  isValid: boolean;\n  value: number | string | null;\n};\n\nconst defaultReturn: RadioFieldResult = {\n  isValid: false,\n  value: null,\n};\n\nexport default (options?: HTMLInputElement[]): RadioFieldResult =>\n  Array.isArray(options)\n    ? options.reduce(\n        (previous, option): RadioFieldResult =>\n          option && option.checked && !option.disabled\n            ? {\n                isValid: true,\n                value: option.value,\n              }\n            : previous,\n        defaultReturn,\n      )\n    : defaultReturn;\n","import { FieldError, Ref, ValidateResult } from '../types';\nimport isBoolean from '../utils/isBoolean';\nimport isMessage from '../utils/isMessage';\n\nexport default function getValidateError(\n  result: ValidateResult,\n  ref: Ref,\n  type = 'validate',\n): FieldError | void {\n  if (\n    isMessage(result) ||\n    (Array.isArray(result) && result.every(isMessage)) ||\n    (isBoolean(result) && !result)\n  ) {\n    return {\n      type,\n      message: isMessage(result) ? result : '',\n      ref,\n    };\n  }\n}\n","import { ValidationRule } from '../types';\nimport isObject from '../utils/isObject';\nimport isRegex from '../utils/isRegex';\n\nexport default (validationData?: ValidationRule) =>\n  isObject(validationData) && !isRegex(validationData)\n    ? validationData\n    : {\n        value: validationData,\n        message: '',\n      };\n","import { INPUT_VALIDATION_RULES } from '../constants';\nimport {\n  Field,\n  FieldError,\n  InternalFieldErrors,\n  Message,\n  NativeFieldValue,\n} from '../types';\nimport isBoolean from '../utils/isBoolean';\nimport isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isEmptyObject from '../utils/isEmptyObject';\nimport isFileInput from '../utils/isFileInput';\nimport isFunction from '../utils/isFunction';\nimport isMessage from '../utils/isMessage';\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\nimport isObject from '../utils/isObject';\nimport isRadioInput from '../utils/isRadioInput';\nimport isRegex from '../utils/isRegex';\nimport isString from '../utils/isString';\n\nimport appendErrors from './appendErrors';\nimport getCheckboxValue from './getCheckboxValue';\nimport getRadioValue from './getRadioValue';\nimport getValidateError from './getValidateError';\nimport getValueAndMessage from './getValueAndMessage';\n\nexport default async <T extends NativeFieldValue>(\n  field: Field,\n  inputValue: T,\n  validateAllFieldCriteria: boolean,\n  shouldUseNativeValidation?: boolean,\n  isFieldArray?: boolean,\n): Promise<InternalFieldErrors> => {\n  const {\n    ref,\n    refs,\n    required,\n    maxLength,\n    minLength,\n    min,\n    max,\n    pattern,\n    validate,\n    name,\n    valueAsNumber,\n    mount,\n    disabled,\n  } = field._f;\n  if (!mount || disabled) {\n    return {};\n  }\n  const inputRef: HTMLInputElement = refs ? refs[0] : (ref as HTMLInputElement);\n  const setCustomValidity = (message?: string | boolean) => {\n    if (shouldUseNativeValidation && inputRef.reportValidity) {\n      inputRef.setCustomValidity(isBoolean(message) ? '' : message || '');\n      inputRef.reportValidity();\n    }\n  };\n  const error: InternalFieldErrors = {};\n  const isRadio = isRadioInput(ref);\n  const isCheckBox = isCheckBoxInput(ref);\n  const isRadioOrCheckbox = isRadio || isCheckBox;\n  const isEmpty =\n    ((valueAsNumber || isFileInput(ref)) && !ref.value) ||\n    inputValue === '' ||\n    (Array.isArray(inputValue) && !inputValue.length);\n  const appendErrorsCurry = appendErrors.bind(\n    null,\n    name,\n    validateAllFieldCriteria,\n    error,\n  );\n  const getMinMaxMessage = (\n    exceedMax: boolean,\n    maxLengthMessage: Message,\n    minLengthMessage: Message,\n    maxType = INPUT_VALIDATION_RULES.maxLength,\n    minType = INPUT_VALIDATION_RULES.minLength,\n  ) => {\n    const message = exceedMax ? maxLengthMessage : minLengthMessage;\n    error[name] = {\n      type: exceedMax ? maxType : minType,\n      message,\n      ref,\n      ...appendErrorsCurry(exceedMax ? maxType : minType, message),\n    };\n  };\n\n  if (\n    isFieldArray\n      ? !Array.isArray(inputValue) || !inputValue.length\n      : required &&\n        ((!isRadioOrCheckbox && (isEmpty || isNullOrUndefined(inputValue))) ||\n          (isBoolean(inputValue) && !inputValue) ||\n          (isCheckBox && !getCheckboxValue(refs).isValid) ||\n          (isRadio && !getRadioValue(refs).isValid))\n  ) {\n    const { value, message } = isMessage(required)\n      ? { value: !!required, message: required }\n      : getValueAndMessage(required);\n\n    if (value) {\n      error[name] = {\n        type: INPUT_VALIDATION_RULES.required,\n        message,\n        ref: inputRef,\n        ...appendErrorsCurry(INPUT_VALIDATION_RULES.required, message),\n      };\n      if (!validateAllFieldCriteria) {\n        setCustomValidity(message);\n        return error;\n      }\n    }\n  }\n\n  if (!isEmpty && (!isNullOrUndefined(min) || !isNullOrUndefined(max))) {\n    let exceedMax;\n    let exceedMin;\n    const maxOutput = getValueAndMessage(max);\n    const minOutput = getValueAndMessage(min);\n\n    if (!isNullOrUndefined(inputValue) && !isNaN(inputValue as number)) {\n      const valueNumber =\n        (ref as HTMLInputElement).valueAsNumber ||\n        (inputValue ? +inputValue : inputValue);\n      if (!isNullOrUndefined(maxOutput.value)) {\n        exceedMax = valueNumber > maxOutput.value;\n      }\n      if (!isNullOrUndefined(minOutput.value)) {\n        exceedMin = valueNumber < minOutput.value;\n      }\n    } else {\n      const valueDate =\n        (ref as HTMLInputElement).valueAsDate || new Date(inputValue as string);\n      const convertTimeToDate = (time: unknown) =>\n        new Date(new Date().toDateString() + ' ' + time);\n      const isTime = ref.type == 'time';\n      const isWeek = ref.type == 'week';\n\n      if (isString(maxOutput.value) && inputValue) {\n        exceedMax = isTime\n          ? convertTimeToDate(inputValue) > convertTimeToDate(maxOutput.value)\n          : isWeek\n          ? inputValue > maxOutput.value\n          : valueDate > new Date(maxOutput.value);\n      }\n\n      if (isString(minOutput.value) && inputValue) {\n        exceedMin = isTime\n          ? convertTimeToDate(inputValue) < convertTimeToDate(minOutput.value)\n          : isWeek\n          ? inputValue < minOutput.value\n          : valueDate < new Date(minOutput.value);\n      }\n    }\n\n    if (exceedMax || exceedMin) {\n      getMinMaxMessage(\n        !!exceedMax,\n        maxOutput.message,\n        minOutput.message,\n        INPUT_VALIDATION_RULES.max,\n        INPUT_VALIDATION_RULES.min,\n      );\n      if (!validateAllFieldCriteria) {\n        setCustomValidity(error[name]!.message);\n        return error;\n      }\n    }\n  }\n\n  if (\n    (maxLength || minLength) &&\n    !isEmpty &&\n    (isString(inputValue) || (isFieldArray && Array.isArray(inputValue)))\n  ) {\n    const maxLengthOutput = getValueAndMessage(maxLength);\n    const minLengthOutput = getValueAndMessage(minLength);\n    const exceedMax =\n      !isNullOrUndefined(maxLengthOutput.value) &&\n      inputValue.length > maxLengthOutput.value;\n    const exceedMin =\n      !isNullOrUndefined(minLengthOutput.value) &&\n      inputValue.length < minLengthOutput.value;\n\n    if (exceedMax || exceedMin) {\n      getMinMaxMessage(\n        exceedMax,\n        maxLengthOutput.message,\n        minLengthOutput.message,\n      );\n      if (!validateAllFieldCriteria) {\n        setCustomValidity(error[name]!.message);\n        return error;\n      }\n    }\n  }\n\n  if (pattern && !isEmpty && isString(inputValue)) {\n    const { value: patternValue, message } = getValueAndMessage(pattern);\n\n    if (isRegex(patternValue) && !inputValue.match(patternValue)) {\n      error[name] = {\n        type: INPUT_VALIDATION_RULES.pattern,\n        message,\n        ref,\n        ...appendErrorsCurry(INPUT_VALIDATION_RULES.pattern, message),\n      };\n      if (!validateAllFieldCriteria) {\n        setCustomValidity(message);\n        return error;\n      }\n    }\n  }\n\n  if (validate) {\n    if (isFunction(validate)) {\n      const result = await validate(inputValue);\n      const validateError = getValidateError(result, inputRef);\n\n      if (validateError) {\n        error[name] = {\n          ...validateError,\n          ...appendErrorsCurry(\n            INPUT_VALIDATION_RULES.validate,\n            validateError.message,\n          ),\n        };\n        if (!validateAllFieldCriteria) {\n          setCustomValidity(validateError.message);\n          return error;\n        }\n      }\n    } else if (isObject(validate)) {\n      let validationResult = {} as FieldError;\n\n      for (const key in validate) {\n        if (!isEmptyObject(validationResult) && !validateAllFieldCriteria) {\n          break;\n        }\n\n        const validateError = getValidateError(\n          await validate[key](inputValue),\n          inputRef,\n          key,\n        );\n\n        if (validateError) {\n          validationResult = {\n            ...validateError,\n            ...appendErrorsCurry(key, validateError.message),\n          };\n\n          setCustomValidity(validateError.message);\n\n          if (validateAllFieldCriteria) {\n            error[name] = validationResult;\n          }\n        }\n      }\n\n      if (!isEmptyObject(validationResult)) {\n        error[name] = {\n          ref: inputRef,\n          ...validationResult,\n        };\n        if (!validateAllFieldCriteria) {\n          return error;\n        }\n      }\n    }\n  }\n\n  setCustomValidity(true);\n  return error;\n};\n","import convertToArrayPayload from './convertToArrayPayload';\n\nexport default function append<T>(data: T[], value: T | T[]): T[] {\n  return [...data, ...convertToArrayPayload(value)];\n}\n","export default <T>(value: T | T[]): undefined[] | undefined =>\n  Array.isArray(value) ? value.map(() => undefined) : undefined;\n","import { VALIDATION_MODE } from '../constants';\nimport { Mode } from '../types';\n\nexport default (\n  mode?: Mode,\n): {\n  isOnSubmit: boolean;\n  isOnBlur: boolean;\n  isOnChange: boolean;\n  isOnAll: boolean;\n  isOnTouch: boolean;\n} => ({\n  isOnSubmit: !mode || mode === VALIDATION_MODE.onSubmit,\n  isOnBlur: mode === VALIDATION_MODE.onBlur,\n  isOnChange: mode === VALIDATION_MODE.onChange,\n  isOnAll: mode === VALIDATION_MODE.all,\n  isOnTouch: mode === VALIDATION_MODE.onTouched,\n});\n","import convertToArrayPayload from './convertToArrayPayload';\n\nexport default function insert<T>(data: T[], index: number): (T | undefined)[];\nexport default function insert<T>(\n  data: T[],\n  index: number,\n  value: T | T[],\n): T[];\nexport default function insert<T>(\n  data: T[],\n  index: number,\n  value?: T | T[],\n): (T | undefined)[] {\n  return [\n    ...data.slice(0, index),\n    ...convertToArrayPayload(value),\n    ...data.slice(index),\n  ];\n}\n","import isUndefined from './isUndefined';\n\nexport default <T>(\n  data: (T | undefined)[],\n  from: number,\n  to: number,\n): (T | undefined)[] => {\n  if (!Array.isArray(data)) {\n    return [];\n  }\n\n  if (isUndefined(data[to])) {\n    data[to] = undefined;\n  }\n  data.splice(to, 0, data.splice(from, 1)[0]);\n\n  return data;\n};\n","import convertToArrayPayload from './convertToArrayPayload';\n\nexport default function prepend<T>(data: T[], value: T | T[]): T[] {\n  return [...convertToArrayPayload(value), ...convertToArrayPayload(data)];\n}\n","import compact from './compact';\nimport convertToArrayPayload from './convertToArrayPayload';\nimport isUndefined from './isUndefined';\n\nfunction removeAtIndexes<T>(data: T[], indexes: number[]): T[] {\n  let i = 0;\n  const temp = [...data];\n\n  for (const index of indexes) {\n    temp.splice(index - i, 1);\n    i++;\n  }\n\n  return compact(temp).length ? temp : [];\n}\n\nexport default <T>(data: T[], index?: number | number[]): T[] =>\n  isUndefined(index)\n    ? []\n    : removeAtIndexes(\n        data,\n        (convertToArrayPayload(index) as number[]).sort((a, b) => a - b),\n      );\n","export default <T>(data: T[], indexA: number, indexB: number): void => {\n  data[indexA] = [data[indexB], (data[indexB] = data[indexA])][0];\n};\n","import isEmptyObject from './isEmptyObject';\nimport isKey from './isKey';\nimport isObject from './isObject';\nimport isUndefined from './isUndefined';\nimport stringToPath from './stringToPath';\n\nfunction baseGet(object: any, updatePath: (string | number)[]) {\n  const length = updatePath.slice(0, -1).length;\n  let index = 0;\n\n  while (index < length) {\n    object = isUndefined(object) ? index++ : object[updatePath[index++]];\n  }\n\n  return object;\n}\n\nfunction isEmptyArray(obj: unknown[]) {\n  for (const key in obj) {\n    if (!isUndefined(obj[key])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport default function unset(object: any, path: string) {\n  const updatePath = isKey(path) ? [path] : stringToPath(path);\n  const childObject =\n    updatePath.length == 1 ? object : baseGet(object, updatePath);\n  const key = updatePath[updatePath.length - 1];\n  let previousObjRef;\n\n  if (childObject) {\n    delete childObject[key];\n  }\n\n  for (let k = 0; k < updatePath.slice(0, -1).length; k++) {\n    let index = -1;\n    let objectRef;\n    const currentPaths = updatePath.slice(0, -(k + 1));\n    const currentPathsLength = currentPaths.length - 1;\n\n    if (k > 0) {\n      previousObjRef = object;\n    }\n\n    while (++index < currentPaths.length) {\n      const item = currentPaths[index];\n      objectRef = objectRef ? objectRef[item] : object[item];\n\n      if (\n        currentPathsLength === index &&\n        ((isObject(objectRef) && isEmptyObject(objectRef)) ||\n          (Array.isArray(objectRef) && isEmptyArray(objectRef)))\n      ) {\n        previousObjRef ? delete previousObjRef[item] : delete object[item];\n      }\n\n      previousObjRef = objectRef;\n    }\n  }\n\n  return object;\n}\n","export default <T>(fieldValues: T[], index: number, value: T) => {\n  fieldValues[index] = value;\n  return fieldValues;\n};\n","import { Noop } from '../types';\n\nexport type Observer<T> = {\n  next: (value: T) => void;\n};\n\nexport type Subscription = {\n  unsubscribe: Noop;\n};\n\nexport type Subject<T> = {\n  readonly observers: Observer<T>[];\n  subscribe: (value: Observer<T>) => Subscription;\n  unsubscribe: Noop;\n} & Observer<T>;\n\nexport default function createSubject<T>(): Subject<T> {\n  let _observers: Observer<T>[] = [];\n\n  const next = (value: T) => {\n    for (const observer of _observers) {\n      observer.next(value);\n    }\n  };\n\n  const subscribe = (observer: Observer<T>): Subscription => {\n    _observers.push(observer);\n    return {\n      unsubscribe: () => {\n        _observers = _observers.filter((o) => o !== observer);\n      },\n    };\n  };\n\n  const unsubscribe = () => {\n    _observers = [];\n  };\n\n  return {\n    get observers() {\n      return _observers;\n    },\n    next,\n    subscribe,\n    unsubscribe,\n  };\n}\n","import { Primitive } from '../types';\n\nimport isNullOrUndefined from './isNullOrUndefined';\nimport { isObjectType } from './isObject';\n\nexport default (value: unknown): value is Primitive =>\n  isNullOrUndefined(value) || !isObjectType(value);\n","import isObject from '../utils/isObject';\n\nimport isDateObject from './isDateObject';\nimport isPrimitive from './isPrimitive';\n\nexport default function deepEqual(object1: any, object2: any) {\n  if (isPrimitive(object1) || isPrimitive(object2)) {\n    return object1 === object2;\n  }\n\n  if (isDateObject(object1) && isDateObject(object2)) {\n    return object1.getTime() === object2.getTime();\n  }\n\n  const keys1 = Object.keys(object1);\n  const keys2 = Object.keys(object2);\n\n  if (keys1.length !== keys2.length) {\n    return false;\n  }\n\n  for (const key of keys1) {\n    const val1 = object1[key];\n\n    if (!keys2.includes(key)) {\n      return false;\n    }\n\n    if (key !== 'ref') {\n      const val2 = object2[key];\n\n      if (\n        (isDateObject(val1) && isDateObject(val2)) ||\n        (isObject(val1) && isObject(val2)) ||\n        (Array.isArray(val1) && Array.isArray(val2))\n          ? !deepEqual(val1, val2)\n          : val1 !== val2\n      ) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n","export default (value: unknown): value is HTMLElement => {\n  const owner = value ? ((value as HTMLElement).ownerDocument as Document) : 0;\n  const ElementClass =\n    owner && owner.defaultView ? owner.defaultView.HTMLElement : HTMLElement;\n  return value instanceof ElementClass;\n};\n","import { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLSelectElement =>\n  element.type === `select-multiple`;\n","import { Ref } from '../types';\n\nimport isHTMLElement from './isHTMLElement';\n\nexport default (ref: Ref) => isHTMLElement(ref) && ref.isConnected;\n","import isFunction from './isFunction';\n\nexport default <T>(data: T): boolean => {\n  for (const key in data) {\n    if (isFunction(data[key])) {\n      return true;\n    }\n  }\n  return false;\n};\n","import deepEqual from '../utils/deepEqual';\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\nimport isObject from '../utils/isObject';\nimport isPrimitive from '../utils/isPrimitive';\nimport isUndefined from '../utils/isUndefined';\nimport objectHasFunction from '../utils/objectHasFunction';\n\nfunction markFieldsDirty<U>(data: U, fields: Record<string, any> = {}) {\n  const isParentNodeArray = Array.isArray(data);\n\n  if (isObject(data) || isParentNodeArray) {\n    for (const key in data) {\n      if (\n        Array.isArray(data[key]) ||\n        (isObject(data[key]) && !objectHasFunction(data[key]))\n      ) {\n        fields[key] = Array.isArray(data[key]) ? [] : {};\n        markFieldsDirty(data[key], fields[key]);\n      } else if (!isNullOrUndefined(data[key])) {\n        fields[key] = true;\n      }\n    }\n  }\n\n  return fields;\n}\n\nfunction getDirtyFieldsFromDefaultValues<T>(\n  data: T,\n  formValues: T,\n  dirtyFieldsFromValues: any,\n) {\n  const isParentNodeArray = Array.isArray(data);\n\n  if (isObject(data) || isParentNodeArray) {\n    for (const key in data) {\n      if (\n        Array.isArray(data[key]) ||\n        (isObject(data[key]) && !objectHasFunction(data[key]))\n      ) {\n        if (\n          isUndefined(formValues) ||\n          isPrimitive(dirtyFieldsFromValues[key])\n        ) {\n          dirtyFieldsFromValues[key] = Array.isArray(data[key])\n            ? markFieldsDirty(data[key], [])\n            : { ...markFieldsDirty(data[key]) };\n        } else {\n          getDirtyFieldsFromDefaultValues(\n            data[key],\n            isNullOrUndefined(formValues) ? {} : formValues[key],\n            dirtyFieldsFromValues[key],\n          );\n        }\n      } else {\n        deepEqual(data[key], formValues[key])\n          ? delete dirtyFieldsFromValues[key]\n          : (dirtyFieldsFromValues[key] = true);\n      }\n    }\n  }\n\n  return dirtyFieldsFromValues;\n}\n\nexport default <T>(defaultValues: T, formValues: T) =>\n  getDirtyFieldsFromDefaultValues(\n    defaultValues,\n    formValues,\n    markFieldsDirty(formValues),\n  );\n","import { Field, NativeFieldValue } from '../types';\nimport isString from '../utils/isString';\nimport isUndefined from '../utils/isUndefined';\n\nexport default <T extends NativeFieldValue>(\n  value: T,\n  { valueAsNumber, valueAsDate, setValueAs }: Field['_f'],\n) =>\n  isUndefined(value)\n    ? value\n    : valueAsNumber\n    ? value === ''\n      ? NaN\n      : value\n      ? +value\n      : value\n    : valueAsDate && isString(value)\n    ? new Date(value)\n    : setValueAs\n    ? setValueAs(value)\n    : value;\n","import { Field } from '../types';\nimport isCheckBox from '../utils/isCheckBoxInput';\nimport isFileInput from '../utils/isFileInput';\nimport isMultipleSelect from '../utils/isMultipleSelect';\nimport isRadioInput from '../utils/isRadioInput';\nimport isUndefined from '../utils/isUndefined';\n\nimport getCheckboxValue from './getCheckboxValue';\nimport getFieldValueAs from './getFieldValueAs';\nimport getRadioValue from './getRadioValue';\n\nexport default function getFieldValue(_f: Field['_f']) {\n  const ref = _f.ref;\n\n  if (_f.refs ? _f.refs.every((ref) => ref.disabled) : ref.disabled) {\n    return;\n  }\n\n  if (isFileInput(ref)) {\n    return ref.files;\n  }\n\n  if (isRadioInput(ref)) {\n    return getRadioValue(_f.refs).value;\n  }\n\n  if (isMultipleSelect(ref)) {\n    return [...ref.selectedOptions].map(({ value }) => value);\n  }\n\n  if (isCheckBox(ref)) {\n    return getCheckboxValue(_f.refs).value;\n  }\n\n  return getFieldValueAs(isUndefined(ref.value) ? _f.ref.value : ref.value, _f);\n}\n","import {\n  CriteriaMode,\n  Field,\n  FieldName,\n  FieldRefs,\n  FieldValues,\n  InternalFieldName,\n} from '../types';\nimport { get } from '../utils';\nimport set from '../utils/set';\n\nexport default <TFieldValues extends FieldValues>(\n  fieldsNames: Set<InternalFieldName> | InternalFieldName[],\n  _fields: FieldRefs,\n  criteriaMode?: CriteriaMode,\n  shouldUseNativeValidation?: boolean | undefined,\n) => {\n  const fields: Record<InternalFieldName, Field['_f']> = {};\n\n  for (const name of fieldsNames) {\n    const field: Field = get(_fields, name);\n\n    field && set(fields, name, field._f);\n  }\n\n  return {\n    criteriaMode,\n    names: [...fieldsNames] as FieldName<TFieldValues>[],\n    fields,\n    shouldUseNativeValidation,\n  };\n};\n","import {\n  ValidationRule,\n  ValidationValue,\n  ValidationValueMessage,\n} from '../types';\nimport isObject from '../utils/isObject';\nimport isRegex from '../utils/isRegex';\nimport isUndefined from '../utils/isUndefined';\n\nexport default <T extends ValidationValue>(\n  rule?: ValidationRule<T> | ValidationValueMessage<T>,\n) =>\n  isUndefined(rule)\n    ? undefined\n    : isRegex(rule)\n    ? rule.source\n    : isObject(rule)\n    ? isRegex(rule.value)\n      ? rule.value.source\n      : rule.value\n    : rule;\n","import { FieldError, FieldErrors, FieldValues } from '../types';\nimport get from '../utils/get';\nimport isKey from '../utils/isKey';\n\nexport default function schemaErrorLookup<T extends FieldValues = FieldValues>(\n  errors: FieldErrors<T>,\n  _fields: FieldValues,\n  name: string,\n): {\n  error?: FieldError;\n  name: string;\n} {\n  const error = get(errors, name);\n\n  if (error || isKey(name)) {\n    return {\n      error,\n      name,\n    };\n  }\n\n  const names = name.split('.');\n\n  while (names.length) {\n    const fieldName = names.join('.');\n    const field = get(_fields, fieldName);\n    const foundError = get(errors, fieldName);\n\n    if (field && !Array.isArray(field) && name !== fieldName) {\n      return { name };\n    }\n\n    if (foundError && foundError.type) {\n      return {\n        name: fieldName,\n        error: foundError,\n      };\n    }\n\n    names.pop();\n  }\n\n  return {\n    name,\n  };\n}\n","import { EVENTS, VALIDATION_MODE } from '../constants';\nimport {\n  BatchFieldArrayUpdate,\n  ChangeHandler,\n  DeepPartial,\n  DelayCallback,\n  EventType,\n  Field,\n  FieldError,\n  FieldNamesMarkedBoolean,\n  FieldPath,\n  FieldRefs,\n  FieldValues,\n  FormState,\n  GetIsDirty,\n  InternalFieldName,\n  Names,\n  Path,\n  Ref,\n  ResolverResult,\n  SetFieldValue,\n  SetValueConfig,\n  Subjects,\n  UseFormClearErrors,\n  UseFormGetFieldState,\n  UseFormGetValues,\n  UseFormHandleSubmit,\n  UseFormProps,\n  UseFormRegister,\n  UseFormReset,\n  UseFormResetField,\n  UseFormReturn,\n  UseFormSetError,\n  UseFormSetFocus,\n  UseFormSetValue,\n  UseFormTrigger,\n  UseFormUnregister,\n  UseFormWatch,\n  WatchInternal,\n  WatchObserver,\n} from '../types';\nimport cloneObject from '../utils/cloneObject';\nimport compact from '../utils/compact';\nimport convertToArrayPayload from '../utils/convertToArrayPayload';\nimport createSubject from '../utils/createSubject';\nimport deepEqual from '../utils/deepEqual';\nimport get from '../utils/get';\nimport getValidationModes from '../utils/getValidationModes';\nimport isBoolean from '../utils/isBoolean';\nimport isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isDateObject from '../utils/isDateObject';\nimport isEmptyObject from '../utils/isEmptyObject';\nimport isFileInput from '../utils/isFileInput';\nimport isFunction from '../utils/isFunction';\nimport isHTMLElement from '../utils/isHTMLElement';\nimport isMultipleSelect from '../utils/isMultipleSelect';\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\nimport isPrimitive from '../utils/isPrimitive';\nimport isRadioOrCheckbox from '../utils/isRadioOrCheckbox';\nimport isString from '../utils/isString';\nimport isUndefined from '../utils/isUndefined';\nimport isWeb from '../utils/isWeb';\nimport live from '../utils/live';\nimport set from '../utils/set';\nimport unset from '../utils/unset';\n\nimport focusFieldBy from './focusFieldBy';\nimport generateWatchOutput from './generateWatchOutput';\nimport getDirtyFields from './getDirtyFields';\nimport getEventValue from './getEventValue';\nimport getFieldValue from './getFieldValue';\nimport getFieldValueAs from './getFieldValueAs';\nimport getResolverOptions from './getResolverOptions';\nimport getRuleValue from './getRuleValue';\nimport hasValidation from './hasValidation';\nimport isNameInFieldArray from './isNameInFieldArray';\nimport isWatched from './isWatched';\nimport schemaErrorLookup from './schemaErrorLookup';\nimport skipValidation from './skipValidation';\nimport unsetEmptyArray from './unsetEmptyArray';\nimport updateFieldArrayRootError from './updateFieldArrayRootError';\nimport validateField from './validateField';\n\nconst defaultOptions = {\n  mode: VALIDATION_MODE.onSubmit,\n  reValidateMode: VALIDATION_MODE.onChange,\n  shouldFocusError: true,\n} as const;\n\nexport function createFormControl<\n  TFieldValues extends FieldValues = FieldValues,\n  TContext = any,\n>(\n  props: UseFormProps<TFieldValues, TContext> = {},\n): Omit<UseFormReturn<TFieldValues, TContext>, 'formState'> {\n  let _options = {\n    ...defaultOptions,\n    ...props,\n  };\n  let _formState: FormState<TFieldValues> = {\n    submitCount: 0,\n    isDirty: false,\n    isValidating: false,\n    isSubmitted: false,\n    isSubmitting: false,\n    isSubmitSuccessful: false,\n    isValid: false,\n    touchedFields: {},\n    dirtyFields: {},\n    errors: {},\n  };\n  let _fields = {};\n  let _defaultValues = cloneObject(_options.defaultValues) || {};\n  let _formValues = _options.shouldUnregister\n    ? {}\n    : cloneObject(_defaultValues);\n  let _stateFlags = {\n    action: false,\n    mount: false,\n    watch: false,\n  };\n  let _names: Names = {\n    mount: new Set(),\n    unMount: new Set(),\n    array: new Set(),\n    watch: new Set(),\n  } as Names;\n  let delayErrorCallback: DelayCallback | null;\n  let timer = 0;\n  let validateFields: Record<InternalFieldName, number> = {};\n  const _proxyFormState = {\n    isDirty: false,\n    dirtyFields: false,\n    touchedFields: false,\n    isValidating: false,\n    isValid: false,\n    errors: false,\n  };\n  const _subjects: Subjects<TFieldValues> = {\n    watch: createSubject(),\n    array: createSubject(),\n    state: createSubject(),\n  };\n\n  const validationModeBeforeSubmit = getValidationModes(_options.mode);\n  const validationModeAfterSubmit = getValidationModes(_options.reValidateMode);\n  const shouldDisplayAllAssociatedErrors =\n    _options.criteriaMode === VALIDATION_MODE.all;\n\n  const debounce =\n    <T extends Function>(callback: T) =>\n    (wait: number) => {\n      clearTimeout(timer);\n      timer = window.setTimeout(callback, wait);\n    };\n\n  const _updateValid = async () => {\n    let isValid = false;\n\n    if (_proxyFormState.isValid) {\n      isValid = _options.resolver\n        ? isEmptyObject((await _executeSchema()).errors)\n        : await executeBuiltInValidation(_fields, true);\n\n      if (isValid !== _formState.isValid) {\n        _formState.isValid = isValid;\n        _subjects.state.next({\n          isValid,\n        });\n      }\n    }\n\n    return isValid;\n  };\n\n  const _updateFieldArray: BatchFieldArrayUpdate = (\n    name,\n    values = [],\n    method,\n    args,\n    shouldSetValues = true,\n    shouldUpdateFieldsAndState = true,\n  ) => {\n    if (args && method) {\n      _stateFlags.action = true;\n      if (shouldUpdateFieldsAndState && Array.isArray(get(_fields, name))) {\n        const fieldValues = method(get(_fields, name), args.argA, args.argB);\n        shouldSetValues && set(_fields, name, fieldValues);\n      }\n\n      if (\n        _proxyFormState.errors &&\n        shouldUpdateFieldsAndState &&\n        Array.isArray(get(_formState.errors, name))\n      ) {\n        const errors = method(\n          get(_formState.errors, name),\n          args.argA,\n          args.argB,\n        );\n        shouldSetValues && set(_formState.errors, name, errors);\n        unsetEmptyArray(_formState.errors, name);\n      }\n\n      if (\n        _proxyFormState.touchedFields &&\n        shouldUpdateFieldsAndState &&\n        Array.isArray(get(_formState.touchedFields, name))\n      ) {\n        const touchedFields = method(\n          get(_formState.touchedFields, name),\n          args.argA,\n          args.argB,\n        );\n        shouldSetValues && set(_formState.touchedFields, name, touchedFields);\n      }\n\n      if (_proxyFormState.dirtyFields) {\n        _formState.dirtyFields = getDirtyFields(_defaultValues, _formValues);\n      }\n\n      _subjects.state.next({\n        isDirty: _getDirty(name, values),\n        dirtyFields: _formState.dirtyFields,\n        errors: _formState.errors,\n        isValid: _formState.isValid,\n      });\n    } else {\n      set(_formValues, name, values);\n    }\n  };\n\n  const updateErrors = (name: InternalFieldName, error: FieldError) => {\n    set(_formState.errors, name, error);\n    _subjects.state.next({\n      errors: _formState.errors,\n    });\n  };\n\n  const updateValidAndValue = (\n    name: InternalFieldName,\n    shouldSkipSetValueAs: boolean,\n    value?: unknown,\n    ref?: Ref,\n  ) => {\n    const field: Field = get(_fields, name);\n\n    if (field) {\n      const defaultValue = get(\n        _formValues,\n        name,\n        isUndefined(value) ? get(_defaultValues, name) : value,\n      );\n\n      isUndefined(defaultValue) ||\n      (ref && (ref as HTMLInputElement).defaultChecked) ||\n      shouldSkipSetValueAs\n        ? set(\n            _formValues,\n            name,\n            shouldSkipSetValueAs ? defaultValue : getFieldValue(field._f),\n          )\n        : setFieldValue(name, defaultValue);\n\n      _stateFlags.mount && _updateValid();\n    }\n  };\n\n  const updateTouchAndDirty = (\n    name: InternalFieldName,\n    fieldValue: unknown,\n    isBlurEvent?: boolean,\n    shouldDirty?: boolean,\n    shouldRender?: boolean,\n  ): Partial<\n    Pick<FormState<TFieldValues>, 'dirtyFields' | 'isDirty' | 'touchedFields'>\n  > => {\n    let isFieldDirty = false;\n    const output: Partial<FormState<TFieldValues>> & { name: string } = {\n      name,\n    };\n    const isPreviousFieldTouched = get(_formState.touchedFields, name);\n\n    if (_proxyFormState.isDirty) {\n      const isPreviousFormDirty = _formState.isDirty;\n\n      _formState.isDirty = output.isDirty = _getDirty();\n      isFieldDirty = isPreviousFormDirty !== output.isDirty;\n    }\n\n    if (_proxyFormState.dirtyFields && (!isBlurEvent || shouldDirty)) {\n      const isPreviousFieldDirty = get(_formState.dirtyFields, name);\n      const isCurrentFieldPristine = deepEqual(\n        get(_defaultValues, name),\n        fieldValue,\n      );\n\n      isCurrentFieldPristine\n        ? unset(_formState.dirtyFields, name)\n        : set(_formState.dirtyFields, name, true);\n      output.dirtyFields = _formState.dirtyFields;\n      isFieldDirty =\n        isFieldDirty ||\n        isPreviousFieldDirty !== get(_formState.dirtyFields, name);\n    }\n\n    if (isBlurEvent && !isPreviousFieldTouched) {\n      set(_formState.touchedFields, name, isBlurEvent);\n      output.touchedFields = _formState.touchedFields;\n      isFieldDirty =\n        isFieldDirty ||\n        (_proxyFormState.touchedFields &&\n          isPreviousFieldTouched !== isBlurEvent);\n    }\n\n    isFieldDirty && shouldRender && _subjects.state.next(output);\n\n    return isFieldDirty ? output : {};\n  };\n\n  const shouldRenderByError = (\n    name: InternalFieldName,\n    isValid?: boolean,\n    error?: FieldError,\n    fieldState?: {\n      dirty?: FieldNamesMarkedBoolean<TFieldValues>;\n      isDirty?: boolean;\n      touched?: FieldNamesMarkedBoolean<TFieldValues>;\n    },\n  ) => {\n    const previousFieldError = get(_formState.errors, name);\n    const shouldUpdateValid =\n      _proxyFormState.isValid &&\n      isBoolean(isValid) &&\n      _formState.isValid !== isValid;\n\n    if (props.delayError && error) {\n      delayErrorCallback = debounce(() => updateErrors(name, error));\n      delayErrorCallback(props.delayError);\n    } else {\n      clearTimeout(timer);\n      delayErrorCallback = null;\n      error\n        ? set(_formState.errors, name, error)\n        : unset(_formState.errors, name);\n    }\n\n    if (\n      (error ? !deepEqual(previousFieldError, error) : previousFieldError) ||\n      !isEmptyObject(fieldState) ||\n      shouldUpdateValid\n    ) {\n      const updatedFormState = {\n        ...fieldState,\n        ...(shouldUpdateValid && isBoolean(isValid) ? { isValid } : {}),\n        errors: _formState.errors,\n        name,\n      };\n\n      _formState = {\n        ..._formState,\n        ...updatedFormState,\n      };\n\n      _subjects.state.next(updatedFormState);\n    }\n\n    validateFields[name]--;\n\n    if (\n      _proxyFormState.isValidating &&\n      !Object.values(validateFields).some((v) => v)\n    ) {\n      _subjects.state.next({\n        isValidating: false,\n      });\n      validateFields = {};\n    }\n  };\n\n  const _executeSchema = async (name?: InternalFieldName[]) =>\n    _options.resolver\n      ? await _options.resolver(\n          { ..._formValues } as TFieldValues,\n          _options.context,\n          getResolverOptions(\n            name || _names.mount,\n            _fields,\n            _options.criteriaMode,\n            _options.shouldUseNativeValidation,\n          ),\n        )\n      : ({} as ResolverResult<TFieldValues>);\n\n  const executeSchemaAndUpdateState = async (names?: InternalFieldName[]) => {\n    const { errors } = await _executeSchema();\n\n    if (names) {\n      for (const name of names) {\n        const error = get(errors, name);\n        error\n          ? set(_formState.errors, name, error)\n          : unset(_formState.errors, name);\n      }\n    } else {\n      _formState.errors = errors;\n    }\n\n    return errors;\n  };\n\n  const executeBuiltInValidation = async (\n    fields: FieldRefs,\n    shouldOnlyCheckValid?: boolean,\n    context = {\n      valid: true,\n    },\n  ) => {\n    for (const name in fields) {\n      const field = fields[name];\n\n      if (field) {\n        const { _f, ...fieldValue } = field;\n\n        if (_f) {\n          const isFieldArrayRoot = _names.array.has(_f.name);\n          const fieldError = await validateField(\n            field,\n            get(_formValues, _f.name),\n            shouldDisplayAllAssociatedErrors,\n            _options.shouldUseNativeValidation,\n            isFieldArrayRoot,\n          );\n\n          if (fieldError[_f.name]) {\n            context.valid = false;\n\n            if (shouldOnlyCheckValid) {\n              break;\n            }\n          }\n\n          !shouldOnlyCheckValid &&\n            (get(fieldError, _f.name)\n              ? isFieldArrayRoot\n                ? updateFieldArrayRootError(\n                    _formState.errors,\n                    fieldError,\n                    _f.name,\n                  )\n                : set(_formState.errors, _f.name, fieldError[_f.name])\n              : unset(_formState.errors, _f.name));\n        }\n\n        fieldValue &&\n          (await executeBuiltInValidation(\n            fieldValue,\n            shouldOnlyCheckValid,\n            context,\n          ));\n      }\n    }\n\n    return context.valid;\n  };\n\n  const _removeUnmounted = () => {\n    for (const name of _names.unMount) {\n      const field: Field = get(_fields, name);\n\n      field &&\n        (field._f.refs\n          ? field._f.refs.every((ref) => !live(ref))\n          : !live(field._f.ref)) &&\n        unregister(name as FieldPath<TFieldValues>);\n    }\n\n    _names.unMount = new Set();\n  };\n\n  const _getDirty: GetIsDirty = (name, data) => (\n    name && data && set(_formValues, name, data),\n    !deepEqual(getValues(), _defaultValues)\n  );\n\n  const _getWatch: WatchInternal<TFieldValues> = (\n    names,\n    defaultValue,\n    isGlobal,\n  ) => {\n    const fieldValues = {\n      ...(_stateFlags.mount\n        ? _formValues\n        : isUndefined(defaultValue)\n        ? _defaultValues\n        : isString(names)\n        ? { [names]: defaultValue }\n        : defaultValue),\n    };\n\n    return generateWatchOutput(names, _names, fieldValues, isGlobal);\n  };\n\n  const _getFieldArray = <TFieldArrayValues>(\n    name: InternalFieldName,\n  ): Partial<TFieldArrayValues>[] =>\n    compact(\n      get(\n        _stateFlags.mount ? _formValues : _defaultValues,\n        name,\n        props.shouldUnregister ? get(_defaultValues, name, []) : [],\n      ),\n    );\n\n  const setFieldValue = (\n    name: InternalFieldName,\n    value: SetFieldValue<TFieldValues>,\n    options: SetValueConfig = {},\n  ) => {\n    const field: Field = get(_fields, name);\n    let fieldValue: unknown = value;\n\n    if (field) {\n      const fieldReference = field._f;\n\n      if (fieldReference) {\n        !fieldReference.disabled &&\n          set(_formValues, name, getFieldValueAs(value, fieldReference));\n\n        fieldValue =\n          isWeb && isHTMLElement(fieldReference.ref) && isNullOrUndefined(value)\n            ? ''\n            : value;\n\n        if (isMultipleSelect(fieldReference.ref)) {\n          [...fieldReference.ref.options].forEach(\n            (optionRef) =>\n              (optionRef.selected = (\n                fieldValue as InternalFieldName[]\n              ).includes(optionRef.value)),\n          );\n        } else if (fieldReference.refs) {\n          if (isCheckBoxInput(fieldReference.ref)) {\n            fieldReference.refs.length > 1\n              ? fieldReference.refs.forEach(\n                  (checkboxRef) =>\n                    (!checkboxRef.defaultChecked || !checkboxRef.disabled) &&\n                    (checkboxRef.checked = Array.isArray(fieldValue)\n                      ? !!(fieldValue as []).find(\n                          (data: string) => data === checkboxRef.value,\n                        )\n                      : fieldValue === checkboxRef.value),\n                )\n              : fieldReference.refs[0] &&\n                (fieldReference.refs[0].checked = !!fieldValue);\n          } else {\n            fieldReference.refs.forEach(\n              (radioRef: HTMLInputElement) =>\n                (radioRef.checked = radioRef.value === fieldValue),\n            );\n          }\n        } else if (isFileInput(fieldReference.ref)) {\n          fieldReference.ref.value = '';\n        } else {\n          fieldReference.ref.value = fieldValue;\n\n          if (!fieldReference.ref.type) {\n            _subjects.watch.next({\n              name,\n            });\n          }\n        }\n      }\n    }\n\n    (options.shouldDirty || options.shouldTouch) &&\n      updateTouchAndDirty(\n        name,\n        fieldValue,\n        options.shouldTouch,\n        options.shouldDirty,\n        true,\n      );\n\n    options.shouldValidate && trigger(name as Path<TFieldValues>);\n  };\n\n  const setValues = <\n    T extends InternalFieldName,\n    K extends SetFieldValue<TFieldValues>,\n    U extends SetValueConfig,\n  >(\n    name: T,\n    value: K,\n    options: U,\n  ) => {\n    for (const fieldKey in value) {\n      const fieldValue = value[fieldKey];\n      const fieldName = `${name}.${fieldKey}` as Path<TFieldValues>;\n      const field = get(_fields, fieldName);\n\n      (_names.array.has(name) ||\n        !isPrimitive(fieldValue) ||\n        (field && !field._f)) &&\n      !isDateObject(fieldValue)\n        ? setValues(fieldName, fieldValue, options)\n        : setFieldValue(fieldName, fieldValue, options);\n    }\n  };\n\n  const setValue: UseFormSetValue<TFieldValues> = (\n    name,\n    value,\n    options = {},\n  ) => {\n    const field = get(_fields, name);\n    const isFieldArray = _names.array.has(name);\n    const cloneValue = cloneObject(value);\n\n    set(_formValues, name, cloneValue);\n\n    if (isFieldArray) {\n      _subjects.array.next({\n        name,\n        values: _formValues,\n      });\n\n      if (\n        (_proxyFormState.isDirty || _proxyFormState.dirtyFields) &&\n        options.shouldDirty\n      ) {\n        _formState.dirtyFields = getDirtyFields(_defaultValues, _formValues);\n\n        _subjects.state.next({\n          name,\n          dirtyFields: _formState.dirtyFields,\n          isDirty: _getDirty(name, cloneValue),\n        });\n      }\n    } else {\n      field && !field._f && !isNullOrUndefined(cloneValue)\n        ? setValues(name, cloneValue, options)\n        : setFieldValue(name, cloneValue, options);\n    }\n\n    isWatched(name, _names) && _subjects.state.next({});\n    _subjects.watch.next({\n      name,\n    });\n  };\n\n  const onChange: ChangeHandler = async (event) => {\n    const target = event.target;\n    let name = target.name;\n    const field: Field = get(_fields, name);\n\n    if (field) {\n      let error;\n      let isValid;\n      const fieldValue = target.type\n        ? getFieldValue(field._f)\n        : getEventValue(event);\n      const isBlurEvent =\n        event.type === EVENTS.BLUR || event.type === EVENTS.FOCUS_OUT;\n      const shouldSkipValidation =\n        (!hasValidation(field._f) &&\n          !_options.resolver &&\n          !get(_formState.errors, name) &&\n          !field._f.deps) ||\n        skipValidation(\n          isBlurEvent,\n          get(_formState.touchedFields, name),\n          _formState.isSubmitted,\n          validationModeAfterSubmit,\n          validationModeBeforeSubmit,\n        );\n      const watched = isWatched(name, _names, isBlurEvent);\n\n      set(_formValues, name, fieldValue);\n\n      if (isBlurEvent) {\n        field._f.onBlur && field._f.onBlur(event);\n        delayErrorCallback && delayErrorCallback(0);\n      } else if (field._f.onChange) {\n        field._f.onChange(event);\n      }\n\n      const fieldState = updateTouchAndDirty(\n        name,\n        fieldValue,\n        isBlurEvent,\n        false,\n      );\n\n      const shouldRender = !isEmptyObject(fieldState) || watched;\n\n      !isBlurEvent &&\n        _subjects.watch.next({\n          name,\n          type: event.type,\n        });\n\n      if (shouldSkipValidation) {\n        _proxyFormState.isValid && _updateValid();\n\n        return (\n          shouldRender &&\n          _subjects.state.next({ name, ...(watched ? {} : fieldState) })\n        );\n      }\n\n      !isBlurEvent && watched && _subjects.state.next({});\n\n      validateFields[name] = validateFields[name]\n        ? validateFields[name] + 1\n        : 1;\n\n      _subjects.state.next({\n        isValidating: true,\n      });\n\n      if (_options.resolver) {\n        const { errors } = await _executeSchema([name]);\n        const previousErrorLookupResult = schemaErrorLookup(\n          _formState.errors,\n          _fields,\n          name,\n        );\n        const errorLookupResult = schemaErrorLookup(\n          errors,\n          _fields,\n          previousErrorLookupResult.name || name,\n        );\n\n        error = errorLookupResult.error;\n        name = errorLookupResult.name;\n\n        isValid = isEmptyObject(errors);\n      } else {\n        error = (\n          await validateField(\n            field,\n            get(_formValues, name),\n            shouldDisplayAllAssociatedErrors,\n            _options.shouldUseNativeValidation,\n          )\n        )[name];\n\n        _updateValid();\n      }\n\n      field._f.deps &&\n        trigger(\n          field._f.deps as FieldPath<TFieldValues> | FieldPath<TFieldValues>[],\n        );\n\n      shouldRenderByError(name, isValid, error, fieldState);\n    }\n  };\n\n  const trigger: UseFormTrigger<TFieldValues> = async (name, options = {}) => {\n    let isValid;\n    let validationResult;\n    const fieldNames = convertToArrayPayload(name) as InternalFieldName[];\n\n    _subjects.state.next({\n      isValidating: true,\n    });\n\n    if (_options.resolver) {\n      const errors = await executeSchemaAndUpdateState(\n        isUndefined(name) ? name : fieldNames,\n      );\n\n      isValid = isEmptyObject(errors);\n      validationResult = name\n        ? !fieldNames.some((name) => get(errors, name))\n        : isValid;\n    } else if (name) {\n      validationResult = (\n        await Promise.all(\n          fieldNames.map(async (fieldName) => {\n            const field = get(_fields, fieldName);\n            return await executeBuiltInValidation(\n              field && field._f ? { [fieldName]: field } : field,\n            );\n          }),\n        )\n      ).every(Boolean);\n      !(!validationResult && !_formState.isValid) && _updateValid();\n    } else {\n      validationResult = isValid = await executeBuiltInValidation(_fields);\n    }\n\n    _subjects.state.next({\n      ...(!isString(name) ||\n      (_proxyFormState.isValid && isValid !== _formState.isValid)\n        ? {}\n        : { name }),\n      ...(_options.resolver || !name ? { isValid } : {}),\n      errors: _formState.errors,\n      isValidating: false,\n    });\n\n    options.shouldFocus &&\n      !validationResult &&\n      focusFieldBy(\n        _fields,\n        (key) => key && get(_formState.errors, key),\n        name ? fieldNames : _names.mount,\n      );\n\n    return validationResult;\n  };\n\n  const getValues: UseFormGetValues<TFieldValues> = (\n    fieldNames?:\n      | FieldPath<TFieldValues>\n      | ReadonlyArray<FieldPath<TFieldValues>>,\n  ) => {\n    const values = {\n      ..._defaultValues,\n      ...(_stateFlags.mount ? _formValues : {}),\n    };\n\n    return isUndefined(fieldNames)\n      ? values\n      : isString(fieldNames)\n      ? get(values, fieldNames as InternalFieldName)\n      : fieldNames.map((name) => get(values, name as InternalFieldName));\n  };\n\n  const getFieldState: UseFormGetFieldState<TFieldValues> = (\n    name,\n    formState,\n  ) => ({\n    invalid: !!get((formState || _formState).errors, name),\n    isDirty: !!get((formState || _formState).dirtyFields, name),\n    isTouched: !!get((formState || _formState).touchedFields, name),\n    error: get((formState || _formState).errors, name),\n  });\n\n  const clearErrors: UseFormClearErrors<TFieldValues> = (name) => {\n    name\n      ? convertToArrayPayload(name).forEach((inputName) =>\n          unset(_formState.errors, inputName),\n        )\n      : (_formState.errors = {});\n\n    _subjects.state.next({\n      errors: _formState.errors,\n    });\n  };\n\n  const setError: UseFormSetError<TFieldValues> = (name, error, options) => {\n    const ref = ((get(_fields, name, { _f: {} }) as Field)._f || {}).ref;\n\n    set(_formState.errors, name, {\n      ...error,\n      ref,\n    });\n\n    _subjects.state.next({\n      name,\n      errors: _formState.errors,\n      isValid: false,\n    });\n\n    options && options.shouldFocus && ref && ref.focus && ref.focus();\n  };\n\n  const watch: UseFormWatch<TFieldValues> = (\n    name?:\n      | FieldPath<TFieldValues>\n      | ReadonlyArray<FieldPath<TFieldValues>>\n      | WatchObserver<TFieldValues>,\n    defaultValue?: unknown,\n  ) =>\n    isFunction(name)\n      ? _subjects.watch.subscribe({\n          next: (info) =>\n            name(\n              _getWatch(undefined, defaultValue as DeepPartial<TFieldValues>),\n              info as {\n                name?: FieldPath<TFieldValues>;\n                type?: EventType;\n                value?: unknown;\n              },\n            ),\n        })\n      : _getWatch(\n          name as InternalFieldName | InternalFieldName[],\n          defaultValue as DeepPartial<TFieldValues>,\n          true,\n        );\n\n  const unregister: UseFormUnregister<TFieldValues> = (name, options = {}) => {\n    for (const fieldName of name ? convertToArrayPayload(name) : _names.mount) {\n      _names.mount.delete(fieldName);\n      _names.array.delete(fieldName);\n\n      if (get(_fields, fieldName)) {\n        if (!options.keepValue) {\n          unset(_fields, fieldName);\n          unset(_formValues, fieldName);\n        }\n\n        !options.keepError && unset(_formState.errors, fieldName);\n        !options.keepDirty && unset(_formState.dirtyFields, fieldName);\n        !options.keepTouched && unset(_formState.touchedFields, fieldName);\n        !_options.shouldUnregister &&\n          !options.keepDefaultValue &&\n          unset(_defaultValues, fieldName);\n      }\n    }\n\n    _subjects.watch.next({});\n\n    _subjects.state.next({\n      ..._formState,\n      ...(!options.keepDirty ? {} : { isDirty: _getDirty() }),\n    });\n\n    !options.keepIsValid && _updateValid();\n  };\n\n  const register: UseFormRegister<TFieldValues> = (name, options = {}) => {\n    let field = get(_fields, name);\n    const disabledIsDefined = isBoolean(options.disabled);\n\n    set(_fields, name, {\n      ...(field || {}),\n      _f: {\n        ...(field && field._f ? field._f : { ref: { name } }),\n        name,\n        mount: true,\n        ...options,\n      },\n    });\n    _names.mount.add(name);\n\n    field\n      ? disabledIsDefined &&\n        set(\n          _formValues,\n          name,\n          options.disabled\n            ? undefined\n            : get(_formValues, name, getFieldValue(field._f)),\n        )\n      : updateValidAndValue(name, true, options.value);\n\n    return {\n      ...(disabledIsDefined ? { disabled: options.disabled } : {}),\n      ...(_options.shouldUseNativeValidation\n        ? {\n            required: !!options.required,\n            min: getRuleValue(options.min),\n            max: getRuleValue(options.max),\n            minLength: getRuleValue<number>(options.minLength) as number,\n            maxLength: getRuleValue(options.maxLength) as number,\n            pattern: getRuleValue(options.pattern) as string,\n          }\n        : {}),\n      name,\n      onChange,\n      onBlur: onChange,\n      ref: (ref: HTMLInputElement | null): void => {\n        if (ref) {\n          register(name, options);\n          field = get(_fields, name);\n\n          const fieldRef = isUndefined(ref.value)\n            ? ref.querySelectorAll\n              ? (ref.querySelectorAll('input,select,textarea')[0] as Ref) || ref\n              : ref\n            : ref;\n          const radioOrCheckbox = isRadioOrCheckbox(fieldRef);\n          const refs = field._f.refs || [];\n\n          if (\n            radioOrCheckbox\n              ? refs.find((option: Ref) => option === fieldRef)\n              : fieldRef === field._f.ref\n          ) {\n            return;\n          }\n\n          set(_fields, name, {\n            _f: {\n              ...field._f,\n              ...(radioOrCheckbox\n                ? {\n                    refs: [\n                      ...refs.filter(live),\n                      fieldRef,\n                      ...(!!Array.isArray(get(_defaultValues, name))\n                        ? [{}]\n                        : []),\n                    ],\n                    ref: { type: fieldRef.type, name },\n                  }\n                : { ref: fieldRef }),\n            },\n          });\n\n          updateValidAndValue(name, false, undefined, fieldRef);\n        } else {\n          field = get(_fields, name, {});\n\n          if (field._f) {\n            field._f.mount = false;\n          }\n\n          (_options.shouldUnregister || options.shouldUnregister) &&\n            !(isNameInFieldArray(_names.array, name) && _stateFlags.action) &&\n            _names.unMount.add(name);\n        }\n      },\n    };\n  };\n\n  const _focusError = () =>\n    _options.shouldFocusError &&\n    focusFieldBy(\n      _fields,\n      (key) => key && get(_formState.errors, key),\n      _names.mount,\n    );\n\n  const handleSubmit: UseFormHandleSubmit<TFieldValues> =\n    (onValid, onInvalid) => async (e) => {\n      if (e) {\n        e.preventDefault && e.preventDefault();\n        e.persist && e.persist();\n      }\n      let hasNoPromiseError = true;\n      let fieldValues: any = cloneObject(_formValues);\n\n      _subjects.state.next({\n        isSubmitting: true,\n      });\n\n      try {\n        if (_options.resolver) {\n          const { errors, values } = await _executeSchema();\n          _formState.errors = errors;\n          fieldValues = values;\n        } else {\n          await executeBuiltInValidation(_fields);\n        }\n\n        if (isEmptyObject(_formState.errors)) {\n          _subjects.state.next({\n            errors: {},\n            isSubmitting: true,\n          });\n          await onValid(fieldValues, e);\n        } else {\n          if (onInvalid) {\n            await onInvalid({ ..._formState.errors }, e);\n          }\n\n          _focusError();\n        }\n      } catch (err) {\n        hasNoPromiseError = false;\n        throw err;\n      } finally {\n        _formState.isSubmitted = true;\n        _subjects.state.next({\n          isSubmitted: true,\n          isSubmitting: false,\n          isSubmitSuccessful:\n            isEmptyObject(_formState.errors) && hasNoPromiseError,\n          submitCount: _formState.submitCount + 1,\n          errors: _formState.errors,\n        });\n      }\n    };\n\n  const resetField: UseFormResetField<TFieldValues> = (name, options = {}) => {\n    if (get(_fields, name)) {\n      if (isUndefined(options.defaultValue)) {\n        setValue(name, get(_defaultValues, name));\n      } else {\n        setValue(name, options.defaultValue);\n        set(_defaultValues, name, options.defaultValue);\n      }\n\n      if (!options.keepTouched) {\n        unset(_formState.touchedFields, name);\n      }\n\n      if (!options.keepDirty) {\n        unset(_formState.dirtyFields, name);\n        _formState.isDirty = options.defaultValue\n          ? _getDirty(name, get(_defaultValues, name))\n          : _getDirty();\n      }\n\n      if (!options.keepError) {\n        unset(_formState.errors, name);\n        _proxyFormState.isValid && _updateValid();\n      }\n\n      _subjects.state.next({ ..._formState });\n    }\n  };\n\n  const _reset: UseFormReset<TFieldValues> = (\n    formValues,\n    keepStateOptions = {},\n  ) => {\n    const updatedValues = formValues || _defaultValues;\n    const cloneUpdatedValues = cloneObject(updatedValues);\n    const values =\n      formValues && !isEmptyObject(formValues)\n        ? cloneUpdatedValues\n        : _defaultValues;\n\n    if (!keepStateOptions.keepDefaultValues) {\n      _defaultValues = updatedValues;\n    }\n\n    if (!keepStateOptions.keepValues) {\n      if (keepStateOptions.keepDirtyValues) {\n        for (const fieldName of _names.mount) {\n          get(_formState.dirtyFields, fieldName)\n            ? set(values, fieldName, get(_formValues, fieldName))\n            : setValue(\n                fieldName as FieldPath<TFieldValues>,\n                get(values, fieldName),\n              );\n        }\n      } else {\n        if (isWeb && isUndefined(formValues)) {\n          for (const name of _names.mount) {\n            const field = get(_fields, name);\n            if (field && field._f) {\n              const fieldReference = Array.isArray(field._f.refs)\n                ? field._f.refs[0]\n                : field._f.ref;\n\n              if (isHTMLElement(fieldReference)) {\n                const form = fieldReference.closest('form');\n                if (form) {\n                  form.reset();\n                  break;\n                }\n              }\n            }\n          }\n        }\n\n        _fields = {};\n      }\n\n      _formValues = props.shouldUnregister\n        ? keepStateOptions.keepDefaultValues\n          ? cloneObject(_defaultValues)\n          : {}\n        : cloneUpdatedValues;\n\n      _subjects.array.next({\n        values,\n      });\n\n      _subjects.watch.next({\n        values,\n      });\n    }\n\n    _names = {\n      mount: new Set(),\n      unMount: new Set(),\n      array: new Set(),\n      watch: new Set(),\n      watchAll: false,\n      focus: '',\n    };\n\n    _stateFlags.mount =\n      !_proxyFormState.isValid || !!keepStateOptions.keepIsValid;\n\n    _stateFlags.watch = !!props.shouldUnregister;\n\n    _subjects.state.next({\n      submitCount: keepStateOptions.keepSubmitCount\n        ? _formState.submitCount\n        : 0,\n      isDirty:\n        keepStateOptions.keepDirty || keepStateOptions.keepDirtyValues\n          ? _formState.isDirty\n          : !!(\n              keepStateOptions.keepDefaultValues &&\n              !deepEqual(formValues, _defaultValues)\n            ),\n      isSubmitted: keepStateOptions.keepIsSubmitted\n        ? _formState.isSubmitted\n        : false,\n      dirtyFields:\n        keepStateOptions.keepDirty || keepStateOptions.keepDirtyValues\n          ? _formState.dirtyFields\n          : keepStateOptions.keepDefaultValues && formValues\n          ? getDirtyFields(_defaultValues, formValues)\n          : {},\n      touchedFields: keepStateOptions.keepTouched\n        ? _formState.touchedFields\n        : {},\n      errors: keepStateOptions.keepErrors ? _formState.errors : {},\n      isSubmitting: false,\n      isSubmitSuccessful: false,\n    });\n  };\n\n  const reset: UseFormReset<TFieldValues> = (formValues, keepStateOptions) =>\n    _reset(\n      isFunction(formValues)\n        ? formValues(_formValues as TFieldValues)\n        : formValues,\n      keepStateOptions,\n    );\n\n  const setFocus: UseFormSetFocus<TFieldValues> = (name, options = {}) => {\n    const field = get(_fields, name);\n    const fieldReference = field && field._f;\n\n    if (fieldReference) {\n      const fieldRef = fieldReference.refs\n        ? fieldReference.refs[0]\n        : fieldReference.ref;\n\n      if (fieldRef.focus) {\n        fieldRef.focus();\n        options.shouldSelect && fieldRef.select();\n      }\n    }\n  };\n\n  return {\n    control: {\n      register,\n      unregister,\n      getFieldState,\n      _executeSchema,\n      _focusError,\n      _getWatch,\n      _getDirty,\n      _updateValid,\n      _removeUnmounted,\n      _updateFieldArray,\n      _getFieldArray,\n      _subjects,\n      _proxyFormState,\n      get _fields() {\n        return _fields;\n      },\n      get _formValues() {\n        return _formValues;\n      },\n      get _stateFlags() {\n        return _stateFlags;\n      },\n      set _stateFlags(value) {\n        _stateFlags = value;\n      },\n      get _defaultValues() {\n        return _defaultValues;\n      },\n      get _names() {\n        return _names;\n      },\n      set _names(value) {\n        _names = value;\n      },\n      get _formState() {\n        return _formState;\n      },\n      set _formState(value) {\n        _formState = value;\n      },\n      get _options() {\n        return _options;\n      },\n      set _options(value) {\n        _options = {\n          ..._options,\n          ...value,\n        };\n      },\n    },\n    trigger,\n    register,\n    handleSubmit,\n    watch,\n    setValue,\n    getValues,\n    reset,\n    resetField,\n    clearErrors,\n    unregister,\n    setError,\n    setFocus,\n    getFieldState,\n  };\n}\n","import { Field } from '../types';\n\nexport default (options: Field['_f']) =>\n  options.mount &&\n  (options.required ||\n    options.min ||\n    options.max ||\n    options.maxLength ||\n    options.minLength ||\n    options.pattern ||\n    options.validate);\n","export default (\n  isBlurEvent: boolean,\n  isTouched: boolean,\n  isSubmitted: boolean,\n  reValidateMode: {\n    isOnBlur: boolean;\n    isOnChange: boolean;\n  },\n  mode: Partial<{\n    isOnSubmit: boolean;\n    isOnBlur: boolean;\n    isOnChange: boolean;\n    isOnTouch: boolean;\n    isOnAll: boolean;\n  }>,\n) => {\n  if (mode.isOnAll) {\n    return false;\n  } else if (!isSubmitted && mode.isOnTouch) {\n    return !(isTouched || isBlurEvent);\n  } else if (isSubmitted ? reValidateMode.isOnBlur : mode.isOnBlur) {\n    return !isBlurEvent;\n  } else if (isSubmitted ? reValidateMode.isOnChange : mode.isOnChange) {\n    return isBlurEvent;\n  }\n  return true;\n};\n","import { FieldElement } from '../types';\n\nimport isCheckBoxInput from './isCheckBoxInput';\nimport isRadioInput from './isRadioInput';\n\nexport default (ref: FieldElement): ref is HTMLInputElement =>\n  isRadioInput(ref) || isCheckBoxInput(ref);\n","import compact from '../utils/compact';\nimport get from '../utils/get';\nimport unset from '../utils/unset';\n\nexport default <T>(ref: T, name: string) =>\n  !compact(get(ref, name)).length && unset(ref, name);\n","import { ControllerProps, FieldPath, FieldValues } from './types';\nimport { useController } from './useController';\n\n/**\n * Component based on `useController` hook to work with controlled component.\n *\n * @remarks\n * [API](https://react-hook-form.com/api/usecontroller/controller) • [Demo](https://codesandbox.io/s/react-hook-form-v6-controller-ts-jwyzw) • [Video](https://www.youtube.com/watch?v=N2UNk_UCVyA)\n *\n * @param props - the path name to the form field value, and validation rules.\n *\n * @returns provide field handler functions, field and form state.\n *\n * @example\n * ```tsx\n * function App() {\n *   const { control } = useForm<FormValues>({\n *     defaultValues: {\n *       test: \"\"\n *     }\n *   });\n *\n *   return (\n *     <form>\n *       <Controller\n *         control={control}\n *         name=\"test\"\n *         render={({ field: { onChange, onBlur, value, ref }, formState, fieldState }) => (\n *           <>\n *             <input\n *               onChange={onChange} // send value to hook form\n *               onBlur={onBlur} // notify when input is touched\n *               value={value} // return updated value\n *               ref={ref} // set ref for focus management\n *             />\n *             <p>{formState.isSubmitted ? \"submitted\" : \"\"}</p>\n *             <p>{fieldState.isTouched ? \"touched\" : \"\"}</p>\n *           </>\n *         )}\n *       />\n *     </form>\n *   );\n * }\n * ```\n */\nconst Controller = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n>(\n  props: ControllerProps<TFieldValues, TName>,\n) => props.render(useController<TFieldValues, TName>(props));\n\nexport { Controller };\n","import React from 'react';\n\nimport focusFieldBy from './logic/focusFieldBy';\nimport generateId from './logic/generateId';\nimport getFocusFieldName from './logic/getFocusFieldName';\nimport isWatched from './logic/isWatched';\nimport updateFieldArrayRootError from './logic/updateFieldArrayRootError';\nimport validateField from './logic/validateField';\nimport appendAt from './utils/append';\nimport cloneObject from './utils/cloneObject';\nimport convertToArrayPayload from './utils/convertToArrayPayload';\nimport fillEmptyArray from './utils/fillEmptyArray';\nimport get from './utils/get';\nimport getValidationModes from './utils/getValidationModes';\nimport insertAt from './utils/insert';\nimport isEmptyObject from './utils/isEmptyObject';\nimport moveArrayAt from './utils/move';\nimport prependAt from './utils/prepend';\nimport removeArrayAt from './utils/remove';\nimport set from './utils/set';\nimport swapArrayAt from './utils/swap';\nimport unset from './utils/unset';\nimport updateAt from './utils/update';\nimport { VALIDATION_MODE } from './constants';\nimport {\n  Control,\n  Field,\n  FieldArray,\n  FieldArrayMethodProps,\n  FieldArrayPath,\n  FieldArrayWithId,\n  FieldErrors,\n  FieldPath,\n  FieldValues,\n  InternalFieldName,\n  RegisterOptions,\n  UseFieldArrayProps,\n  UseFieldArrayReturn,\n} from './types';\nimport { useFormContext } from './useFormContext';\nimport { useSubscribe } from './useSubscribe';\n\n/**\n * A custom hook that exposes convenient methods to perform operations with a list of dynamic inputs that need to be appended, updated, removed etc. • [Demo](https://codesandbox.io/s/react-hook-form-usefieldarray-ssugn) • [Video](https://youtu.be/4MrbfGSFY2A)\n *\n * @remarks\n * [API](https://react-hook-form.com/api/usefieldarray) • [Demo](https://codesandbox.io/s/react-hook-form-usefieldarray-ssugn)\n *\n * @param props - useFieldArray props\n *\n * @returns methods - functions to manipulate with the Field Arrays (dynamic inputs) {@link UseFieldArrayReturn}\n *\n * @example\n * ```tsx\n * function App() {\n *   const { register, control, handleSubmit, reset, trigger, setError } = useForm({\n *     defaultValues: {\n *       test: []\n *     }\n *   });\n *   const { fields, append } = useFieldArray({\n *     control,\n *     name: \"test\"\n *   });\n *\n *   return (\n *     <form onSubmit={handleSubmit(data => console.log(data))}>\n *       {fields.map((item, index) => (\n *          <input key={item.id} {...register(`test.${index}.firstName`)}  />\n *       ))}\n *       <button type=\"button\" onClick={() => append({ firstName: \"bill\" })}>\n *         append\n *       </button>\n *       <input type=\"submit\" />\n *     </form>\n *   );\n * }\n * ```\n */\nexport function useFieldArray<\n  TFieldValues extends FieldValues = FieldValues,\n  TFieldArrayName extends FieldArrayPath<TFieldValues> = FieldArrayPath<TFieldValues>,\n  TKeyName extends string = 'id',\n>(\n  props: UseFieldArrayProps<TFieldValues, TFieldArrayName, TKeyName>,\n): UseFieldArrayReturn<TFieldValues, TFieldArrayName, TKeyName> {\n  const methods = useFormContext();\n  const {\n    control = methods.control,\n    name,\n    keyName = 'id',\n    shouldUnregister,\n  } = props;\n  const [fields, setFields] = React.useState(control._getFieldArray(name));\n  const ids = React.useRef<string[]>(\n    control._getFieldArray(name).map(generateId),\n  );\n  const _fieldIds = React.useRef(fields);\n  const _name = React.useRef(name);\n  const _actioned = React.useRef(false);\n\n  _name.current = name;\n  _fieldIds.current = fields;\n  control._names.array.add(name);\n\n  props.rules &&\n    (control as Control).register(\n      name as FieldPath<TFieldValues>,\n      props.rules as RegisterOptions<TFieldValues>,\n    );\n\n  const callback = React.useCallback(\n    ({\n      values,\n      name: fieldArrayName,\n    }: {\n      values?: FieldValues;\n      name?: InternalFieldName;\n    }) => {\n      if (fieldArrayName === _name.current || !fieldArrayName) {\n        const fieldValues = get(values, _name.current);\n        if (Array.isArray(fieldValues)) {\n          setFields(fieldValues);\n          ids.current = fieldValues.map(generateId);\n        }\n      }\n    },\n    [],\n  );\n\n  useSubscribe({\n    callback,\n    subject: control._subjects.array,\n  });\n\n  const updateValues = React.useCallback(\n    <\n      T extends Partial<\n        FieldArrayWithId<TFieldValues, TFieldArrayName, TKeyName>\n      >[],\n    >(\n      updatedFieldArrayValues: T,\n    ) => {\n      _actioned.current = true;\n      control._updateFieldArray(name, updatedFieldArrayValues);\n    },\n    [control, name],\n  );\n\n  const append = (\n    value:\n      | Partial<FieldArray<TFieldValues, TFieldArrayName>>\n      | Partial<FieldArray<TFieldValues, TFieldArrayName>>[],\n    options?: FieldArrayMethodProps,\n  ) => {\n    const appendValue = convertToArrayPayload(cloneObject(value));\n    const updatedFieldArrayValues = appendAt(\n      control._getFieldArray(name),\n      appendValue,\n    );\n    control._names.focus = getFocusFieldName(\n      name,\n      updatedFieldArrayValues.length - 1,\n      options,\n    );\n    ids.current = appendAt(ids.current, appendValue.map(generateId));\n    updateValues(updatedFieldArrayValues);\n    setFields(updatedFieldArrayValues);\n    control._updateFieldArray(name, updatedFieldArrayValues, appendAt, {\n      argA: fillEmptyArray(value),\n    });\n  };\n\n  const prepend = (\n    value:\n      | Partial<FieldArray<TFieldValues, TFieldArrayName>>\n      | Partial<FieldArray<TFieldValues, TFieldArrayName>>[],\n    options?: FieldArrayMethodProps,\n  ) => {\n    const prependValue = convertToArrayPayload(cloneObject(value));\n    const updatedFieldArrayValues = prependAt(\n      control._getFieldArray(name),\n      prependValue,\n    );\n    control._names.focus = getFocusFieldName(name, 0, options);\n    ids.current = prependAt(ids.current, prependValue.map(generateId));\n    updateValues(updatedFieldArrayValues);\n    setFields(updatedFieldArrayValues);\n    control._updateFieldArray(name, updatedFieldArrayValues, prependAt, {\n      argA: fillEmptyArray(value),\n    });\n  };\n\n  const remove = (index?: number | number[]) => {\n    const updatedFieldArrayValues: Partial<\n      FieldArrayWithId<TFieldValues, TFieldArrayName, TKeyName>\n    >[] = removeArrayAt(control._getFieldArray(name), index);\n    ids.current = removeArrayAt(ids.current, index);\n    updateValues(updatedFieldArrayValues);\n    setFields(updatedFieldArrayValues);\n    control._updateFieldArray(name, updatedFieldArrayValues, removeArrayAt, {\n      argA: index,\n    });\n  };\n\n  const insert = (\n    index: number,\n    value:\n      | Partial<FieldArray<TFieldValues, TFieldArrayName>>\n      | Partial<FieldArray<TFieldValues, TFieldArrayName>>[],\n    options?: FieldArrayMethodProps,\n  ) => {\n    const insertValue = convertToArrayPayload(cloneObject(value));\n    const updatedFieldArrayValues = insertAt(\n      control._getFieldArray(name),\n      index,\n      insertValue,\n    );\n    control._names.focus = getFocusFieldName(name, index, options);\n    ids.current = insertAt(ids.current, index, insertValue.map(generateId));\n    updateValues(updatedFieldArrayValues);\n    setFields(updatedFieldArrayValues);\n    control._updateFieldArray(name, updatedFieldArrayValues, insertAt, {\n      argA: index,\n      argB: fillEmptyArray(value),\n    });\n  };\n\n  const swap = (indexA: number, indexB: number) => {\n    const updatedFieldArrayValues = control._getFieldArray(name);\n    swapArrayAt(updatedFieldArrayValues, indexA, indexB);\n    swapArrayAt(ids.current, indexA, indexB);\n    updateValues(updatedFieldArrayValues);\n    setFields(updatedFieldArrayValues);\n    control._updateFieldArray(\n      name,\n      updatedFieldArrayValues,\n      swapArrayAt,\n      {\n        argA: indexA,\n        argB: indexB,\n      },\n      false,\n    );\n  };\n\n  const move = (from: number, to: number) => {\n    const updatedFieldArrayValues = control._getFieldArray(name);\n    moveArrayAt(updatedFieldArrayValues, from, to);\n    moveArrayAt(ids.current, from, to);\n    updateValues(updatedFieldArrayValues);\n    setFields(updatedFieldArrayValues);\n    control._updateFieldArray(\n      name,\n      updatedFieldArrayValues,\n      moveArrayAt,\n      {\n        argA: from,\n        argB: to,\n      },\n      false,\n    );\n  };\n\n  const update = (\n    index: number,\n    value: FieldArray<TFieldValues, TFieldArrayName>,\n  ) => {\n    const updateValue = cloneObject(value);\n    const updatedFieldArrayValues = updateAt(\n      control._getFieldArray<\n        FieldArrayWithId<TFieldValues, TFieldArrayName, TKeyName>\n      >(name),\n      index,\n      updateValue as FieldArrayWithId<TFieldValues, TFieldArrayName, TKeyName>,\n    );\n    ids.current = [...updatedFieldArrayValues].map((item, i) =>\n      !item || i === index ? generateId() : ids.current[i],\n    );\n    updateValues(updatedFieldArrayValues);\n    setFields([...updatedFieldArrayValues]);\n    control._updateFieldArray(\n      name,\n      updatedFieldArrayValues,\n      updateAt,\n      {\n        argA: index,\n        argB: updateValue,\n      },\n      true,\n      false,\n    );\n  };\n\n  const replace = (\n    value:\n      | Partial<FieldArray<TFieldValues, TFieldArrayName>>\n      | Partial<FieldArray<TFieldValues, TFieldArrayName>>[],\n  ) => {\n    const updatedFieldArrayValues = convertToArrayPayload(cloneObject(value));\n    ids.current = updatedFieldArrayValues.map(generateId);\n    updateValues([...updatedFieldArrayValues]);\n    setFields([...updatedFieldArrayValues]);\n    control._updateFieldArray(\n      name,\n      [...updatedFieldArrayValues],\n      <T>(data: T): T => data,\n      {},\n      true,\n      false,\n    );\n  };\n\n  React.useEffect(() => {\n    control._stateFlags.action = false;\n\n    isWatched(name, control._names) && control._subjects.state.next({});\n\n    if (\n      _actioned.current &&\n      (!getValidationModes(control._options.mode).isOnSubmit ||\n        control._formState.isSubmitted)\n    ) {\n      if (control._options.resolver) {\n        control._executeSchema([name]).then((result) => {\n          const error = get(result.errors, name);\n          const existingError = get(control._formState.errors, name);\n\n          if (\n            existingError ? !error && existingError.type : error && error.type\n          ) {\n            error\n              ? set(control._formState.errors, name, error)\n              : unset(control._formState.errors, name);\n            control._subjects.state.next({\n              errors: control._formState.errors as FieldErrors<TFieldValues>,\n            });\n          }\n        });\n      } else {\n        const field: Field = get(control._fields, name);\n        if (field && field._f) {\n          validateField(\n            field,\n            get(control._formValues, name),\n            control._options.criteriaMode === VALIDATION_MODE.all,\n            control._options.shouldUseNativeValidation,\n            true,\n          ).then(\n            (error) =>\n              !isEmptyObject(error) &&\n              control._subjects.state.next({\n                errors: updateFieldArrayRootError(\n                  control._formState.errors,\n                  error,\n                  name,\n                ) as FieldErrors<TFieldValues>,\n              }),\n          );\n        }\n      }\n    }\n\n    control._subjects.watch.next({\n      name,\n      values: control._formValues,\n    });\n\n    control._names.focus &&\n      focusFieldBy(\n        control._fields,\n        (key) => !!key && key.startsWith(control._names.focus),\n      );\n\n    control._names.focus = '';\n\n    control._proxyFormState.isValid && control._updateValid();\n  }, [fields, name, control]);\n\n  React.useEffect(() => {\n    !get(control._formValues, name) && control._updateFieldArray(name);\n\n    return () => {\n      (control._options.shouldUnregister || shouldUnregister) &&\n        control.unregister(name as FieldPath<TFieldValues>);\n    };\n  }, [name, control, keyName, shouldUnregister]);\n\n  return {\n    swap: React.useCallback(swap, [updateValues, name, control]),\n    move: React.useCallback(move, [updateValues, name, control]),\n    prepend: React.useCallback(prepend, [updateValues, name, control]),\n    append: React.useCallback(append, [updateValues, name, control]),\n    remove: React.useCallback(remove, [updateValues, name, control]),\n    insert: React.useCallback(insert, [updateValues, name, control]),\n    update: React.useCallback(update, [updateValues, name, control]),\n    replace: React.useCallback(replace, [updateValues, name, control]),\n    fields: React.useMemo(\n      () =>\n        fields.map((field, index) => ({\n          ...field,\n          [keyName]: ids.current[index] || generateId(),\n        })) as FieldArrayWithId<TFieldValues, TFieldArrayName, TKeyName>[],\n      [fields, keyName],\n    ),\n  };\n}\n","import React from 'react';\n\nimport { createFormControl } from './logic/createFormControl';\nimport getProxyFormState from './logic/getProxyFormState';\nimport shouldRenderFormState from './logic/shouldRenderFormState';\nimport { FieldValues, FormState, UseFormProps, UseFormReturn } from './types';\nimport { useSubscribe } from './useSubscribe';\n\n/**\n * Custom hook to manage the entire form.\n *\n * @remarks\n * [API](https://react-hook-form.com/api/useform) • [Demo](https://codesandbox.io/s/react-hook-form-get-started-ts-5ksmm) • [Video](https://www.youtube.com/watch?v=RkXv4AXXC_4)\n *\n * @param props - form configuration and validation parameters.\n *\n * @returns methods - individual functions to manage the form state. {@link UseFormReturn}\n *\n * @example\n * ```tsx\n * function App() {\n *   const { register, handleSubmit, watch, formState: { errors } } = useForm();\n *   const onSubmit = data => console.log(data);\n *\n *   console.log(watch(\"example\"));\n *\n *   return (\n *     <form onSubmit={handleSubmit(onSubmit)}>\n *       <input defaultValue=\"test\" {...register(\"example\")} />\n *       <input {...register(\"exampleRequired\", { required: true })} />\n *       {errors.exampleRequired && <span>This field is required</span>}\n *       <input type=\"submit\" />\n *     </form>\n *   );\n * }\n * ```\n */\nexport function useForm<\n  TFieldValues extends FieldValues = FieldValues,\n  TContext = any,\n>(\n  props: UseFormProps<TFieldValues, TContext> = {},\n): UseFormReturn<TFieldValues, TContext> {\n  const _formControl = React.useRef<\n    UseFormReturn<TFieldValues, TContext> | undefined\n  >();\n  const [formState, updateFormState] = React.useState<FormState<TFieldValues>>({\n    isDirty: false,\n    isValidating: false,\n    isSubmitted: false,\n    isSubmitting: false,\n    isSubmitSuccessful: false,\n    isValid: false,\n    submitCount: 0,\n    dirtyFields: {},\n    touchedFields: {},\n    errors: {},\n    defaultValues: props.defaultValues,\n  });\n\n  if (!_formControl.current) {\n    _formControl.current = {\n      ...createFormControl(props),\n      formState,\n    };\n  }\n\n  const control = _formControl.current.control;\n  control._options = props;\n\n  useSubscribe({\n    subject: control._subjects.state,\n    callback: React.useCallback(\n      (value: FieldValues) => {\n        if (shouldRenderFormState(value, control._proxyFormState, true)) {\n          control._formState = {\n            ...control._formState,\n            ...value,\n          };\n\n          updateFormState({ ...control._formState });\n        }\n      },\n      [control],\n    ),\n  });\n\n  React.useEffect(() => {\n    if (!control._stateFlags.mount) {\n      control._proxyFormState.isValid && control._updateValid();\n      control._stateFlags.mount = true;\n    }\n\n    if (control._stateFlags.watch) {\n      control._stateFlags.watch = false;\n      control._subjects.state.next({});\n    }\n\n    control._removeUnmounted();\n  });\n\n  React.useEffect(() => {\n    formState.submitCount && control._focusError();\n  }, [control, formState.submitCount]);\n\n  _formControl.current.formState = getProxyFormState(formState, control);\n\n  return _formControl.current;\n}\n"]},"metadata":{},"sourceType":"script"}