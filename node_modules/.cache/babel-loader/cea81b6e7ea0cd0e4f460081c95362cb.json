{"ast":null,"code":"var _jsxFileName = \"/Users/mac/WebstormProjects/Crypto-Landing-Pag/src/Components/Contacts/Index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport emailjs from '@emailjs/browser';\nimport { ServicesContainer, ServicesCard, X, ServicesH1, ServicesH2, ServicesP, ServicesWrapper, ServicesIcon, Row, NavLogo, HeroP, HeroBtnWrapper, Logo } from './ContactsElements';\nimport Icon1 from \"../../Images/1.svg\";\nimport Icon2 from \"../../Images/Vf.svg\";\nimport Icon3 from \"../../Images/Account.svg\";\nimport wheely_logo from \"../../Images/logo2.svg\";\nimport pinksale_logo from \"../../Images/pinksale.png\";\nimport { Button, RaisedButton } from \"../../Utilities/ButtonElements\";\nimport { ArrowForward, ArrowRight } from \"../Hero/HeroElements\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Contacts = () => {\n  _s();\n\n  const [hover, setHover] = useState(false);\n\n  const onHover = () => {\n    setHover(!hover);\n  }; //templateID\n\n\n  const handleSubmit = e => {\n    e.preventDefault(); // Prevents default refresh by the browser\n\n    emailjs.sendForm(`gmail`, 'service_smzbv0f', e.target, apiKey.USER_ID).then(result => {\n      alert(\"Message Sent, We will get back to you shortly\", result.text);\n    }, error => {\n      alert(\"An error occurred, Please try again\", error.text);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ServicesContainer, {\n      id: \"contact-us\",\n      children: [/*#__PURE__*/_jsxDEV(ServicesH1, {\n        children: \"TRADING\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(NavLogo, {\n          src: wheely_logo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(X, {\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(NavLogo, {\n          src: pinksale_logo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(HeroP, {\n        children: \"Yeti Coin is a crypto coin based on Binance Smart Chain blockchain (BSC) protocol. Yeti is already listed on PancakeSwap with further listing on many crypto exchanges such as Binance, Coinbase, etc. You can follow instrictions below to add YETI Coin to your wallet and add liquidity to YETI Coin on Pancakeswap.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(HeroBtnWrapper, {\n        children: /*#__PURE__*/_jsxDEV(RaisedButton, {\n          as: \"a\",\n          href: \"https://yeti-ecosystem.gitbook.io/wheely.whitepaper/roadmap-for-wheely\",\n          target: \"_blank\",\n          onMouseEnter: onHover,\n          onMouseLeave: onHover,\n          primary: \"true\",\n          dark: \"true\",\n          children: [\"PINKSALE \", hover]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Contacts, \"bRXmKus9fOZFlca/6zXTYU+twGY=\");\n\n_c = Contacts;\nexport default Contacts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contacts\");","map":{"version":3,"sources":["/Users/mac/WebstormProjects/Crypto-Landing-Pag/src/Components/Contacts/Index.jsx"],"names":["React","useState","emailjs","ServicesContainer","ServicesCard","X","ServicesH1","ServicesH2","ServicesP","ServicesWrapper","ServicesIcon","Row","NavLogo","HeroP","HeroBtnWrapper","Logo","pinksale_logo","Button","RaisedButton","ArrowForward","ArrowRight","Contacts","hover","setHover","onHover","handleSubmit","e","preventDefault","sendForm","target","apiKey","USER_ID","then","result","alert","text","error","wheely_logo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SACIC,iBADJ,EAEIC,YAFJ,EAGIC,CAHJ,EAIIC,UAJJ,EAKIC,UALJ,EAMIC,SANJ,EAOIC,eAPJ,EAQIC,YARJ,EAQkBC,GARlB,EAQuBC,OARvB,EAQgCC,KARhC,EAQuCC,cARvC,EAQuDC,IARvD,QASO,oBATP;;;;;AAcA,OAAOC,aAAP,MAA0B,2BAA1B;AACA,SAAQC,MAAR,EAAgBC,YAAhB,QAAmC,gCAAnC;AACA,SAAQC,YAAR,EAAsBC,UAAtB,QAAuC,sBAAvC;;;;AAGA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAEnB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBtB,QAAQ,CAAC,KAAD,CAAlC;;AAEA,QAAMuB,OAAO,GAAG,MAAM;AAClBD,IAAAA,QAAQ,CAAC,CAACD,KAAF,CAAR;AACH,GAFD,CAJmB,CAOhB;;;AACH,QAAMG,YAAY,GAAIC,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF,GADwB,CACJ;;AACpBzB,IAAAA,OAAO,CAAC0B,QAAR,CAAkB,OAAlB,EAA0B,iBAA1B,EAA6CF,CAAC,CAACG,MAA/C,EAAuDC,MAAM,CAACC,OAA9D,EACKC,IADL,CACWC,MAAD,IAAY;AACVC,MAAAA,KAAK,CAAC,+CAAD,EAAkDD,MAAM,CAACE,IAAzD,CAAL;AACH,KAHT,EAISC,KAAD,IAAW;AACPF,MAAAA,KAAK,CAAC,qCAAD,EAAwCE,KAAK,CAACD,IAA9C,CAAL;AACH,KANT;AAOH,GATD;;AAYA,sBACI;AAAA,2BACI,QAAC,iBAAD;AAAmB,MAAA,EAAE,EAAC,YAAtB;AAAA,8BACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,GAAD;AAAA,gCACI,QAAC,OAAD;AAAS,UAAA,GAAG,EAAEE;AAAd;AAAA;AAAA;AAAA;AAAA,gBADJ,eAGI,QAAC,CAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAOI,QAAC,OAAD;AAAS,UAAA,GAAG,EAAErB;AAAd;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAcI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdJ,eAmBI,QAAC,cAAD;AAAA,+BACI,QAAC,YAAD;AAEI,UAAA,EAAE,EAAC,GAFP;AAEW,UAAA,IAAI,EAAC,wEAFhB;AAEyF,UAAA,MAAM,EAAC,QAFhG;AAII,UAAA,YAAY,EAAEQ,OAJlB;AAKI,UAAA,YAAY,EAAEA,OALlB;AAMI,UAAA,OAAO,EAAC,MANZ;AAOI,UAAA,IAAI,EAAC,MAPT;AAAA,kCAScF,KATd;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAqCH,CAzDD;;GAAMD,Q;;KAAAA,Q;AA2DN,eAAeA,QAAf","sourcesContent":["import React, {useState} from 'react'\nimport emailjs from '@emailjs/browser';\nimport {\n    ServicesContainer,\n    ServicesCard,\n    X,\n    ServicesH1,\n    ServicesH2,\n    ServicesP,\n    ServicesWrapper,\n    ServicesIcon, Row, NavLogo, HeroP, HeroBtnWrapper, Logo\n} from './ContactsElements'\nimport Icon1 from '../../Images/1.svg'\nimport Icon2 from '../../Images/Vf.svg'\nimport Icon3 from '../../Images/Account.svg'\nimport wheely_logo from \"../../Images/logo2.svg\";\nimport pinksale_logo from \"../../Images/pinksale.png\";\nimport {Button, RaisedButton} from \"../../Utilities/ButtonElements\";\nimport {ArrowForward, ArrowRight} from \"../Hero/HeroElements\";\n\n\nconst Contacts = () => {\n\n    const [hover, setHover] = useState(false);\n\n    const onHover = () => {\n        setHover(!hover);\n    }\n       //templateID\n    const handleSubmit = (e) => {\n        e.preventDefault(); // Prevents default refresh by the browser\n        emailjs.sendForm(`gmail`, 'service_smzbv0f', e.target, apiKey.USER_ID)\n            .then((result) => {\n                    alert(\"Message Sent, We will get back to you shortly\", result.text);\n                },\n                (error) => {\n                    alert(\"An error occurred, Please try again\", error.text);\n                });\n    };\n\n\n    return (\n        <>\n            <ServicesContainer id=\"contact-us\">\n                <ServicesH1>\n                    TRADING\n                </ServicesH1>\n                <Row>\n                    <NavLogo src={wheely_logo}>\n                    </NavLogo>\n                    <X>X</X>\n\n\n\n                    <NavLogo src={pinksale_logo}>\n                    </NavLogo>\n                </Row>\n                <HeroP>\n                    Yeti Coin is a crypto coin based on Binance Smart Chain blockchain (BSC) protocol. Yeti is already listed on PancakeSwap with further listing on many crypto exchanges such as Binance, Coinbase, etc.\n                    You can follow instrictions below to add YETI Coin to your wallet and add liquidity to YETI Coin on Pancakeswap.\n                </HeroP>\n\n                <HeroBtnWrapper>\n                    <RaisedButton\n\n                        as=\"a\" href=\"https://yeti-ecosystem.gitbook.io/wheely.whitepaper/roadmap-for-wheely\" target=\"_blank\"\n\n                        onMouseEnter={onHover}\n                        onMouseLeave={onHover}\n                        primary=\"true\"\n                        dark=\"true\"\n                    >\n                        PINKSALE {hover}\n                    </RaisedButton>\n                </HeroBtnWrapper>\n            </ServicesContainer>\n        </>\n    )\n}\n\nexport default Contacts\n\n"]},"metadata":{},"sourceType":"module"}