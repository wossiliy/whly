{"ast":null,"code":"var _jsxFileName = \"/Users/mac/WebstormProjects/Crypto-Landing-Pag/src/Components/Contacts/Index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport emailjs from '@emailjs/browser';\nimport { ServicesContainer, ServicesCard, X, ServicesH1, ServicesH2, ServicesP, ServicesWrapper, ServicesIcon, Row, NavLogo, HeroP, HeroBtnWrapper, Logo } from './ContactsElements';\nimport Icon1 from \"../../Images/1.svg\";\nimport Icon2 from \"../../Images/Vf.svg\";\nimport Icon3 from \"../../Images/Account.svg\";\nimport wheely_logo from \"../../Images/logo2.svg\";\nimport pinksale_logo from \"../../Images/pinksale.png\";\nimport { Button, RaisedButton } from \"../../Utilities/ButtonElements\";\nimport { ArrowForward, ArrowRight } from \"../Hero/HeroElements\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Contacts = () => {\n  _s();\n\n  const [hover, setHover] = useState(false);\n\n  const onHover = () => {\n    setHover(!hover);\n  }; //templateID\n\n\n  const form = useRef();\n\n  const handleSubmit = e => {\n    e.preventDefault(); // Prevents default refresh by the browser\n\n    emailjs.sendForm(`gmail`, 'template_2yrkmq8', e.target, 'service_smzbv0f').then(result => {\n      alert(\"Message Sent, We will get back to you shortly\", result.text);\n    }, error => {\n      alert(\"An error occurred, Please try again\", error.text);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    ref: form,\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"user_name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      name: \"user_email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      name: \"message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this); // return (\n  //     <>\n  //         <ServicesContainer id=\"contact-us\">\n  //             <ServicesH1>\n  //                 TRADING\n  //             </ServicesH1>\n  //             <Row>\n  //                 <NavLogo src={wheely_logo}>\n  //                 </NavLogo>\n  //                 <X>X</X>\n  //\n  //\n  //\n  //                 <NavLogo src={pinksale_logo}>\n  //                 </NavLogo>\n  //             </Row>\n  //             <HeroP>\n  //                 Yeti Coin is a crypto coin based on Binance Smart Chain blockchain (BSC) protocol. Yeti is already listed on PancakeSwap with further listing on many crypto exchanges such as Binance, Coinbase, etc.\n  //                 You can follow instrictions below to add YETI Coin to your wallet and add liquidity to YETI Coin on Pancakeswap.\n  //             </HeroP>\n  //\n  //             <HeroBtnWrapper>\n  //                 <RaisedButton\n  //\n  //                     as=\"a\" href=\"https://yeti-ecosystem.gitbook.io/wheely.whitepaper/roadmap-for-wheely\" target=\"_blank\"\n  //\n  //                     onMouseEnter={onHover}\n  //                     onMouseLeave={onHover}\n  //                     primary=\"true\"\n  //                     dark=\"true\"\n  //                 >\n  //                     PINKSALE {hover}\n  //                 </RaisedButton>\n  //             </HeroBtnWrapper>\n  //         </ServicesContainer>\n  //     </>\n  // )\n};\n\n_s(Contacts, \"Cwvt2HKVF0J7tnbuztm9YtRYcGY=\");\n\n_c = Contacts;\nexport default Contacts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contacts\");","map":{"version":3,"sources":["/Users/mac/WebstormProjects/Crypto-Landing-Pag/src/Components/Contacts/Index.jsx"],"names":["React","useRef","useState","emailjs","ServicesContainer","ServicesCard","X","ServicesH1","ServicesH2","ServicesP","ServicesWrapper","ServicesIcon","Row","NavLogo","HeroP","HeroBtnWrapper","Logo","pinksale_logo","Button","RaisedButton","ArrowForward","ArrowRight","Contacts","hover","setHover","onHover","form","handleSubmit","e","preventDefault","sendForm","target","then","result","alert","text","error"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,MAAf,EAAuBC,QAAvB,QAAsC,OAAtC;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SACIC,iBADJ,EAEIC,YAFJ,EAGIC,CAHJ,EAIIC,UAJJ,EAKIC,UALJ,EAMIC,SANJ,EAOIC,eAPJ,EAQIC,YARJ,EAQkBC,GARlB,EAQuBC,OARvB,EAQgCC,KARhC,EAQuCC,cARvC,EAQuDC,IARvD,QASO,oBATP;;;;;AAcA,OAAOC,aAAP,MAA0B,2BAA1B;AACA,SAAQC,MAAR,EAAgBC,YAAhB,QAAmC,gCAAnC;AACA,SAAQC,YAAR,EAAsBC,UAAtB,QAAuC,sBAAvC;;;AAGA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAEnB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBtB,QAAQ,CAAC,KAAD,CAAlC;;AAEA,QAAMuB,OAAO,GAAG,MAAM;AAClBD,IAAAA,QAAQ,CAAC,CAACD,KAAF,CAAR;AACH,GAFD,CAJmB,CAOhB;;;AACH,QAAMG,IAAI,GAAGzB,MAAM,EAAnB;;AAGA,QAAM0B,YAAY,GAAIC,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF,GADwB,CACJ;;AACpB1B,IAAAA,OAAO,CAAC2B,QAAR,CAAkB,OAAlB,EAA0B,kBAA1B,EAA8CF,CAAC,CAACG,MAAhD,EAAwD,iBAAxD,EACKC,IADL,CACWC,MAAD,IAAY;AACVC,MAAAA,KAAK,CAAC,+CAAD,EAAkDD,MAAM,CAACE,IAAzD,CAAL;AACH,KAHT,EAISC,KAAD,IAAW;AACPF,MAAAA,KAAK,CAAC,qCAAD,EAAwCE,KAAK,CAACD,IAA9C,CAAL;AACH,KANT;AAOH,GATD;;AAUA,sBACI;AAAM,IAAA,GAAG,EAAET,IAAX;AAAiB,IAAA,QAAQ,EAAEC,YAA3B;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,IAAI,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI;AAAU,MAAA,IAAI,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CArBmB,CAiCnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,CAtED;;GAAML,Q;;KAAAA,Q;AAwEN,eAAeA,QAAf","sourcesContent":["import React, {useRef, useState} from 'react'\nimport emailjs from '@emailjs/browser';\nimport {\n    ServicesContainer,\n    ServicesCard,\n    X,\n    ServicesH1,\n    ServicesH2,\n    ServicesP,\n    ServicesWrapper,\n    ServicesIcon, Row, NavLogo, HeroP, HeroBtnWrapper, Logo\n} from './ContactsElements'\nimport Icon1 from '../../Images/1.svg'\nimport Icon2 from '../../Images/Vf.svg'\nimport Icon3 from '../../Images/Account.svg'\nimport wheely_logo from \"../../Images/logo2.svg\";\nimport pinksale_logo from \"../../Images/pinksale.png\";\nimport {Button, RaisedButton} from \"../../Utilities/ButtonElements\";\nimport {ArrowForward, ArrowRight} from \"../Hero/HeroElements\";\n\n\nconst Contacts = () => {\n\n    const [hover, setHover] = useState(false);\n\n    const onHover = () => {\n        setHover(!hover);\n    }\n       //templateID\n    const form = useRef();\n\n\n    const handleSubmit = (e) => {\n        e.preventDefault(); // Prevents default refresh by the browser\n        emailjs.sendForm(`gmail`, 'template_2yrkmq8', e.target, 'service_smzbv0f')\n            .then((result) => {\n                    alert(\"Message Sent, We will get back to you shortly\", result.text);\n                },\n                (error) => {\n                    alert(\"An error occurred, Please try again\", error.text);\n                });\n    };\n    return (\n        <form ref={form} onSubmit={handleSubmit}>\n            <label>Name</label>\n            <input type=\"text\" name=\"user_name\" />\n            <label>Email</label>\n            <input type=\"email\" name=\"user_email\" />\n            <label>Message</label>\n            <textarea name=\"message\" />\n            <input type=\"submit\" value=\"Send\" />\n        </form>\n    );\n\n    // return (\n    //     <>\n    //         <ServicesContainer id=\"contact-us\">\n    //             <ServicesH1>\n    //                 TRADING\n    //             </ServicesH1>\n    //             <Row>\n    //                 <NavLogo src={wheely_logo}>\n    //                 </NavLogo>\n    //                 <X>X</X>\n    //\n    //\n    //\n    //                 <NavLogo src={pinksale_logo}>\n    //                 </NavLogo>\n    //             </Row>\n    //             <HeroP>\n    //                 Yeti Coin is a crypto coin based on Binance Smart Chain blockchain (BSC) protocol. Yeti is already listed on PancakeSwap with further listing on many crypto exchanges such as Binance, Coinbase, etc.\n    //                 You can follow instrictions below to add YETI Coin to your wallet and add liquidity to YETI Coin on Pancakeswap.\n    //             </HeroP>\n    //\n    //             <HeroBtnWrapper>\n    //                 <RaisedButton\n    //\n    //                     as=\"a\" href=\"https://yeti-ecosystem.gitbook.io/wheely.whitepaper/roadmap-for-wheely\" target=\"_blank\"\n    //\n    //                     onMouseEnter={onHover}\n    //                     onMouseLeave={onHover}\n    //                     primary=\"true\"\n    //                     dark=\"true\"\n    //                 >\n    //                     PINKSALE {hover}\n    //                 </RaisedButton>\n    //             </HeroBtnWrapper>\n    //         </ServicesContainer>\n    //     </>\n    // )\n}\n\nexport default Contacts\n\n"]},"metadata":{},"sourceType":"module"}